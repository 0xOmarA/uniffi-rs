var searchIndex = JSON.parse('{\
"uniffi":{"doc":"Runtime support code for uniffi","t":[0,0,8,10,0,3,12,12,11,11,11,11,0,6,17,3,12,17,11,11,11,0,3,12,12,12,11,11,11,11,11,11,11,11,0,3,12,12,17,17,17,8,5,5,5,0,3,12,3,12,5,5,5,0,0,5,17,5,8,16,16,10,10,10,10,5,8,16,10,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ffi","ffidefault","FfiDefault","ffi_default","foreignbytes","ForeignBytes","len","data","from_raw_parts","as_slice","len","is_empty","foreigncallbacks","ForeignCallback","IDX_CALLBACK_FREE","ForeignCallbackInternals","callback_ptr","EMPTY_PTR","new","set_callback","get_callback","rustbuffer","RustBuffer","capacity","len","data","new","from_raw_parts","len","is_empty","new_with_size","from_vec","destroy_into_vec","destroy","rustcalls","RustCallStatus","code","error_buf","CALL_SUCCESS","CALL_ERROR","CALL_PANIC","FfiError","make_call","call_with_output","call_with_result","testing","COMPILED_COMPONENTS","__private_field","UNIFFI_BINDGEN","__private_field","run_foreign_language_testcase","ensure_compiled_cdylib","run_uniffi_bindgen_test","deps","panichook","ensure_setup","PACKAGE_VERSION","check_compatible_version","FfiConverter","RustType","FfiType","lower","try_lift","write","try_read","check_remaining","RustBufferFfiConverter","RustType","write","try_read","assert_compatible_version","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","ffi_default","default","deref","deref","initialize","initialize"],"q":["uniffi","uniffi::ffi","uniffi::ffi::ffidefault","","uniffi::ffi","uniffi::ffi::foreignbytes","","","","","","","uniffi::ffi","uniffi::ffi::foreigncallbacks","","","","","","","","uniffi::ffi","uniffi::ffi::rustbuffer","","","","","","","","","","","","uniffi::ffi","uniffi::ffi::rustcalls","","","","","","","","","","uniffi","uniffi::testing","","","","","","","uniffi","","uniffi::panichook","uniffi","","","","","","","","","","","","","","","uniffi::ffi::foreignbytes","","","","","","","uniffi::ffi::foreigncallbacks","","","","","","","uniffi::ffi::rustbuffer","","","","","","","uniffi::ffi::rustcalls","","","","","","","uniffi::testing","","","","","","","","","","","","","","uniffi::ffi::rustbuffer","","uniffi::testing","","",""],"d":["","FfiDefault trait","","","","Support for reading a slice of foreign-language-allocated …","The length of the pointed-to data. We use an <code>i32</code> for …","The pointer to the foreign-owned bytes.","Creates a <code>ForeignBytes</code> from its constituent fields.","View the foreign bytes as a <code>&[u8]</code>.","Get the length of this slice of bytes.","Returns true if the length of this slice of bytes is 0.","Callback interfaces are traits specified in UDL which can …","ForeignCallback is the Rust representation of a foreign …","The method index used by the Drop trait to communicate to …","Struct to hold a foreign callback.","","","","","","","Support for passing an allocated-by-Rust buffer of bytes …","The allocated capacity of the underlying <code>Vec<u8></code>. In Rust …","The occupied length of the underlying <code>Vec<u8></code>. In Rust …","The pointer to the allocated buffer of the <code>Vec<u8></code>.","Creates an empty <code>RustBuffer</code>.","Creates a <code>RustBuffer</code> from its constituent fields.","Get the current length of the buffer, as a <code>usize</code>.","Returns true if the length of the buffer is 0.","Creates a <code>RustBuffer</code> zero-filed to the requested size.","Consumes a <code>Vec<u8></code> and returns its raw parts as a …","Converts this <code>RustBuffer</code> back into an owned <code>Vec<u8></code>.","Reclaim memory stored in this <code>RustBuffer</code>.","Low-level support for calling rust functions","Represents the success/error of a rust call","","","","","","","","Wrap a rust function call and return the result directly","Wrap a rust function call that returns a …","Runtime support functionality for testing generated …","","","","","Execute the given foreign-language script as part of a …","Ensure that a uniffi component crate is compiled and …","Execute the <code>uniffi-bindgen test</code> command.","","","Initialize our panic handling hook to optionally log …","","Check whether the uniffi runtime version is compatible a …","Trait defining how to transfer values via the FFI layer.","The type used in Rust code.","The low-level type used for passing values of this type …","Lower a rust value of the target type, into an FFI value …","Lift a rust value of the target type, from an FFI value …","Write a rust value into a buffer, to send over the FFI in …","Read a rust value from a buffer, received over the FFI in …","A helper function to ensure we don’t read past the end …","A helper trait to implement lowering/lifting using a …","","","","Assert that the uniffi runtime version matches an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,2,2,2,2,2,2,0,0,0,0,3,0,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,0,0,0,0,0,0,0,0,0,6,0,7,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,9,9,9,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,4,4,6,7,6,7],"f":[null,null,null,[[]],null,null,null,null,[[["i32",15]]],[[]],[[],["usize",15]],[[],["bool",15]],null,null,null,null,null,null,[[]],[[["foreigncallback",6]]],[[],[["option",4],["foreigncallback",6]]],null,null,null,null,null,[[]],[[["i32",15]]],[[],["usize",15]],[[],["bool",15]],[[["usize",15]]],[[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[]],null,null,null,null,null,null,null,null,[[["rustcallstatus",3]]],[[["rustcallstatus",3]]],[[["rustcallstatus",3]]],null,null,null,null,null,[[["str",15]],["result",6]],[[["str",15]],[["string",3],["result",6]]],[[["str",15]],["result",6]],null,null,[[]],null,[[["str",15]],["bool",15]],null,null,null,[[]],[[],["result",6]],[[["vec",3]]],[[],["result",6]],[[["usize",15]],["result",6]],null,null,[[["vec",3]]],[[],["result",6]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["mutex",3]],[[],["mutex",3]],[[]],[[]]],"p":[[8,"FfiDefault"],[3,"ForeignBytes"],[3,"ForeignCallbackInternals"],[3,"RustBuffer"],[3,"RustCallStatus"],[3,"COMPILED_COMPONENTS"],[3,"UNIFFI_BINDGEN"],[8,"FfiConverter"],[8,"RustBufferFfiConverter"]]},\
"uniffi_bindgen":{"doc":"Uniffi: easily build cross-platform software components …","t":[0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,3,12,12,11,11,3,12,12,11,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,3,12,11,3,12,12,11,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,17,5,3,12,12,11,11,11,3,12,12,11,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,11,11,11,11,11,11,11,3,12,12,11,3,12,12,11,3,12,12,11,3,12,12,12,5,5,5,5,4,13,13,13,13,3,12,12,12,12,5,5,5,0,0,0,8,10,0,8,10,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,3,12,12,11,11,11,11,11,11,0,4,13,13,13,13,13,13,13,11,11,5,5,3,12,11,3,12,11,3,12,11,3,12,11,11,11,3,12,11,11,3,12,11,11,4,13,0,3,12,12,12,11,11,11,11,11,11,0,3,12,12,12,11,11,11,11,11,11,3,12,12,11,11,11,0,3,12,12,11,11,11,11,11,11,11,0,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,4,13,13,13,5,0,3,12,0,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,3,12,12,11,11,11,11,11,3,12,12,12,12,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,11,11,11,3,12,12,11,11,3,12,12,12,3,12,12,12,3,12,12,3,12,12,12,12,12,3,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,4,13,13,13,3,12,3,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,8,10,0,0,5,5,5,5,3,12,12,11,17,5,5,5,5,5,5,5,5,3,12,8,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bindings","kotlin","gen_kotlin","filters","type_kt","type_ffi","literal_kt","class_name_kt","fn_name_kt","var_name_kt","enum_variant_kt","exception_name_kt","lower_kt","write_kt","lift_kt","read_kt","Config","package_name","cdylib_name","package_name","cdylib_name","KotlinWrapper","config","ci","new","write_bindings","full_bindings_path","generate_bindings","compile_bindings","run_script","python","gen_python","filters","type_ffi","literal_py","class_name_py","fn_name_py","var_name_py","enum_name_py","coerce_py","lower_py","lift_py","Config","cdylib_name","cdylib_name","PythonWrapper","config","ci","new","write_bindings","generate_python_bindings","run_script","ruby","gen_ruby","filters","type_ffi","literal_rb","class_name_rb","fn_name_rb","var_name_rb","enum_name_rb","coerce_rb","lower_rb","lift_rb","RESERVED_WORDS","is_reserved_word","Config","cdylib_name","cdylib_path","cdylib_name","custom_cdylib_path","cdylib_path","RubyWrapper","config","ci","new","write_bindings","generate_ruby_bindings","run_script","swift","gen_swift","filters","type_swift","type_ffi","literal_swift","lower_swift","lift_swift","read_swift","enum_variant_swift","class_name_swift","fn_name_swift","var_name_swift","Config","cdylib_name","module_name","ffi_module_name","ffi_module_filename","generate_module_map","module_name","ffi_module_name","ffi_module_filename","modulemap_filename","header_filename","cdylib_name","generate_module_map","BridgingHeader","_config","ci","new","ModuleMap","config","_ci","new","SwiftWrapper","config","ci","new","Bindings","library","header","modulemap","write_bindings","generate_bindings","compile_bindings","run_script","TargetLanguage","Kotlin","Swift","Python","Ruby","Config","kotlin","swift","python","ruby","write_bindings","compile_bindings","run_script","interface","types","finder","TypeFinder","add_type_definitions_to","resolver","TypeResolver","resolve_type_expression","resolve_builtin_type","Type","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","Float32","Float64","Boolean","String","Timestamp","Duration","Object","Record","Enum","Error","CallbackInterface","Optional","Sequence","Map","canonical_name","TypeUniverse","type_definitions","all_known_types","add_type_definitions_from","add_type_definition","get_type_definition","resolve_type_expression","add_known_type","iter_known_types","attributes","Attribute","ByRef","Enum","Error","Name","SelfType","Threadsafe","Throws","is_error","is_enum","name_from_id_or_string","parse_attributes","EnumAttributes","0","contains_error_attr","FunctionAttributes","0","get_throws_err","ArgumentAttributes","0","by_ref","InterfaceAttributes","0","contains_enum_attr","contains_error_attr","threadsafe","ConstructorAttributes","0","get_throws_err","get_name","MethodAttributes","0","get_throws_err","get_self_by_arc","SelfType","ByArc","callbacks","CallbackInterface","name","methods","ffi_init_callback","new","name","type_","methods","ffi_init_callback","derive_ffi_funcs","enum_","Enum","name","variants","flat","name","type_","variants","is_flat","contains_object_references","contains_unsigned_types","Variant","name","fields","name","fields","has_fields","error","Error","name","enum_","from_enum","type_","name","wrapped_enum","variants","is_flat","contains_object_references","function","Function","name","arguments","return_type","ffi_func","attributes","name","arguments","full_arguments","return_type","ffi_func","throws","throws_type","derive_ffi_func","contains_unsigned_types","Argument","name","type_","by_ref","optional","default","name","type_","by_ref","default_value","literal","Literal","Boolean","String","UInt","Int","Float","Enum","EmptySequence","EmptyMap","Null","Radix","Decimal","Octal","Hexadecimal","convert_default_value","namespace","Namespace","name","object","Object","name","constructors","methods","ffi_func_free","uses_deprecated_threadsafe_attribute","new","name","type_","constructors","primary_constructor","alternate_constructors","methods","ffi_object_free","uses_deprecated_threadsafe_attribute","derive_ffi_funcs","contains_unsigned_types","Constructor","name","arguments","ffi_func","attributes","name","arguments","full_arguments","ffi_func","throws","throws_type","derive_ffi_func","is_primary_constructor","contains_unsigned_types","Method","name","object_name","return_type","arguments","ffi_func","attributes","name","arguments","full_arguments","return_type","ffi_func","throws","throws_type","takes_self_by_arc","derive_ffi_func","contains_unsigned_types","record","Record","name","fields","name","type_","fields","contains_object_references","contains_unsigned_types","Field","name","type_","required","default","name","type_","default_value","ffi","FFIType","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","Float32","Float64","RustArcPtr","RustBuffer","ForeignBytes","ForeignCallback","FFIFunction","name","arguments","return_type","name","arguments","return_type","FFIArgument","name","type_","name","type_","CallbackInterface","name","methods","ffi_init_callback","Enum","name","variants","flat","Error","name","enum_","Argument","name","type_","by_ref","optional","default","Function","name","arguments","return_type","ffi_func","attributes","Literal","Boolean","String","UInt","Int","Float","Enum","EmptySequence","EmptyMap","Null","Radix","Decimal","Octal","Hexadecimal","Namespace","name","Constructor","name","arguments","ffi_func","attributes","Method","name","object_name","return_type","arguments","ffi_func","attributes","Object","name","constructors","methods","ffi_func_free","uses_deprecated_threadsafe_attribute","Field","name","type_","required","default","Record","name","fields","ComponentInterface","uniffi_version","types","namespace","enums","records","functions","objects","callback_interfaces","errors","from_webidl","namespace","iter_enum_definitions","get_enum_definition","iter_record_definitions","get_record_definition","iter_function_definitions","get_function_definition","iter_object_definitions","get_object_definition","iter_callback_interface_definitions","get_callback_interface_definition","iter_error_definitions","get_error_definition","iter_types","get_type","type_contains_object_references","contains_optional_types","contains_sequence_types","contains_map_types","type_contains_unsigned_types","checksum","ffi_namespace","ffi_rustbuffer_alloc","ffi_rustbuffer_from_bytes","ffi_rustbuffer_free","ffi_rustbuffer_reserve","iter_ffi_function_definitions","resolve_type_expression","resolve_return_type_expression","add_namespace_definition","add_enum_definition","add_record_definition","add_function_definition","add_object_definition","add_callback_interface_definition","add_error_definition","check_consistency","derive_ffi_funcs","APIBuilder","process","APIConverter","convert","scaffolding","filters","type_rs","type_ffi","ffi_converter_name","ffi_converter","RustScaffolding","ci","uniffi_version","new","BINDGEN_VERSION","generate_component_scaffolding","generate_bindings","run_tests","guess_crate_root","get_config","get_out_dir","parse_udl","slurp_file","Config","bindings","MergeWith","merge_with","run_main","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","merge_with","merge_with","merge_with","merge_with","merge_with","merge_with","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","eq","eq","ne","eq","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","from_str","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","render_into","extension","size_hint","render_into","extension","size_hint","render_into","extension","size_hint","render_into","extension","size_hint","render_into","extension","size_hint","render_into","extension","size_hint","render_into","extension","size_hint","size_hint","extension","size_hint","extension","size_hint","extension","size_hint","extension","size_hint","extension","size_hint","extension","size_hint","extension"],"q":["uniffi_bindgen","uniffi_bindgen::bindings","uniffi_bindgen::bindings::kotlin","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::kotlin::gen_kotlin::filters","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin","","","","","","","","","uniffi_bindgen::bindings::kotlin","","","","","uniffi_bindgen::bindings","uniffi_bindgen::bindings::python","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::python::gen_python::filters","","","","","","","","","uniffi_bindgen::bindings::python::gen_python","","","","","","","uniffi_bindgen::bindings::python","","","uniffi_bindgen::bindings","uniffi_bindgen::bindings::ruby","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::ruby::gen_ruby::filters","","","","","","","","","uniffi_bindgen::bindings::ruby::gen_ruby","","","","","","","","","","","","uniffi_bindgen::bindings::ruby","","","uniffi_bindgen::bindings","uniffi_bindgen::bindings::swift","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings::swift::gen_swift::filters","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift","","","","","","","","uniffi_bindgen::bindings","","","","","","","","","","","","","uniffi_bindgen","uniffi_bindgen::interface","uniffi_bindgen::interface::types","uniffi_bindgen::interface::types::finder","","uniffi_bindgen::interface::types","uniffi_bindgen::interface::types::resolver","","","uniffi_bindgen::interface::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::callbacks","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::enum_","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::error","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::function","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::literal","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::namespace","","uniffi_bindgen::interface","uniffi_bindgen::interface::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::record","","","","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::interface::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen","uniffi_bindgen::scaffolding","uniffi_bindgen::scaffolding::filters","","","","uniffi_bindgen::scaffolding","","","","uniffi_bindgen","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::ruby::gen_ruby","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift","","","","","","","uniffi_bindgen::bindings","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::types","","","","","","","","","","","","","","","","uniffi_bindgen::interface::attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::callbacks","","","","","","","","","uniffi_bindgen::interface::enum_","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::error","","","","","","","","","uniffi_bindgen::interface::function","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::literal","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::namespace","","","","","","","","","uniffi_bindgen::interface::object","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::record","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface","","","","","","","uniffi_bindgen::scaffolding","","","","","","","","uniffi_bindgen","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen::interface::ffi","","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","","uniffi_bindgen::interface::types","uniffi_bindgen::interface::attributes","","","","","","","","uniffi_bindgen::interface::callbacks","uniffi_bindgen::interface::enum_","","uniffi_bindgen::interface::error","uniffi_bindgen::interface::function","","uniffi_bindgen::interface::literal","","uniffi_bindgen::interface::namespace","uniffi_bindgen::interface::object","","","uniffi_bindgen::interface::record","","uniffi_bindgen::interface::ffi","","","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen::interface::types","uniffi_bindgen::interface::attributes","","","","","","uniffi_bindgen::interface::enum_","uniffi_bindgen::interface::object","uniffi_bindgen::interface::ffi","uniffi_bindgen::interface","uniffi_bindgen","uniffi_bindgen::interface::types","uniffi_bindgen::bindings","uniffi_bindgen::interface::types","","uniffi_bindgen::interface::ffi","uniffi_bindgen::interface::types","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen::interface::types","","uniffi_bindgen::interface::attributes","","","","","","","","uniffi_bindgen::interface::callbacks","uniffi_bindgen::interface::enum_","","uniffi_bindgen::interface::error","uniffi_bindgen::interface::function","","uniffi_bindgen::interface::literal","","uniffi_bindgen::interface::namespace","uniffi_bindgen::interface::object","","","uniffi_bindgen::interface::record","","uniffi_bindgen::interface::ffi","","","uniffi_bindgen::interface","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","","","uniffi_bindgen::scaffolding","uniffi_bindgen::bindings","uniffi_bindgen::interface::types","uniffi_bindgen::interface::attributes","","","","","","","","uniffi_bindgen::interface::callbacks","uniffi_bindgen::interface::enum_","","uniffi_bindgen::interface::error","uniffi_bindgen::interface::function","","uniffi_bindgen::interface::literal","","uniffi_bindgen::interface::namespace","uniffi_bindgen::interface::object","","","uniffi_bindgen::interface::record","","uniffi_bindgen::interface::ffi","uniffi_bindgen::interface","uniffi_bindgen::bindings","","","uniffi_bindgen::interface::attributes","","","","","","","","","","","","","uniffi_bindgen::interface","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","uniffi_bindgen::bindings::python::gen_python","uniffi_bindgen::bindings::ruby::gen_ruby","uniffi_bindgen::bindings::swift::gen_swift","uniffi_bindgen::bindings","uniffi_bindgen","uniffi_bindgen::bindings::kotlin::gen_kotlin","","","uniffi_bindgen::bindings::python::gen_python","","","uniffi_bindgen::bindings::ruby::gen_ruby","","","uniffi_bindgen::bindings::swift::gen_swift","","","","","","","","","uniffi_bindgen::scaffolding","","","uniffi_bindgen::bindings::kotlin::gen_kotlin","","uniffi_bindgen::bindings::python::gen_python","","uniffi_bindgen::bindings::ruby::gen_ruby","","uniffi_bindgen::bindings::swift::gen_swift","","","","","","uniffi_bindgen::scaffolding",""],"d":["Generate foreign language bindings for a uniffi component.","","","","Get the Kotlin syntax for representing a given api-level …","Get the Kotlin syntax for representing a given low-level …","","Get the idiomatic Kotlin rendering of a class name (for …","Get the idiomatic Kotlin rendering of a function name.","Get the idiomatic Kotlin rendering of a variable name.","Get the idiomatic Kotlin rendering of an individual enum …","Get the idiomatic Kotlin rendering of an exception name","Get a Kotlin expression for lowering a value into …","Get a Kotlin expression for writing a value into a byte …","Get a Kotlin expression for lifting a value from …","Get a Kotlin expression for reading a value from a byte …","","","","","","","","","","","","","Generate kotlin bindings for the given namespace, then …","Execute the specifed kotlin script, with classpath based …","","","","","","","","","","","","","","","","","","","","","","Execute the specifed python script, with environment …","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the specifed ruby script, with environment based …","Swift bindings backend for UniFFI","","Filters for our Askama templates above.","Declares a Swift type in the public interface for the …","Declares a C type in the bridging header.","Render a literal value for Swift code.","Lower a Swift type into an FFI type.","Lift a Swift type from an FFI type.","Read a Swift type from a byte buffer.","Render the idiomatic Swift casing for the name of an enum.","Render the idiomatic Swift casing for the name of a class.","Render the idiomatic Swift casing for the name of a …","Render the idiomatic Swift casing for the name of a …","Config options for the caller to customize the generated …","","","","","","The name of the Swift module containing the high-level …","The name of the lower-level C module containing the FFI …","The filename stem for the lower-level C module containing …","The name of the <code>.modulemap</code> file for the lower-level C …","The name of the <code>.h</code> file for the lower-level C module with …","The name of the compiled Rust library containing the FFI …","Whether to generate a <code>.modulemap</code> file for the lower-level …","Template for generating the <code>.h</code> file that defines the …","","","","Template for generating the <code>.modulemap</code> file that exposes …","","","","Template for generating the <code>.modulemap</code> file that exposes …","","","","The Swift bindings generated from a [<code>ComponentInterface</code>].","The contents of the generated <code>.swift</code> file, as a string.","The contents of the generated <code>.h</code> file, as a string.","The contents of the generated <code>.modulemap</code> file, as a …","Write UniFFI component bindings for Swift as files on …","Generate UniFFI component bindings for Swift, as strings …","Compile UniFFI component bindings for Swift for use from …","Run a Swift script, allowing it to load modules from the …","Enumeration of all foreign language targets currently …","","","","","","","","","","Generate foreign language bindings from a compiled <code>uniffi</code> …","Compile generated foreign language bindings so they’re …","Execute the given script via foreign language …","Component Interface Definition.","Basic typesystem for defining a component interface.","Helpers for finding the named types defined in a UDL …","Trait to help with an early “type discovery” phase …","","Helpers for resolving UDL type expressions into concrete …","Trait to help resolving an UDL type node to a [<code>Type</code>].","","Resolve built-in API types by name.","Represents all the different high-level types that can be …","","","","","","","","","","","","","","","","","","","","","","","Get the canonical, unique-within-this-component name for …","The set of all possible types used in a particular …","","","Add the definitions of all named [Type]s from a given …","Add the definition of a named [Type].","Get the [Type] corresponding to a given name, if any.","Get the [Type] corresponding to a given WebIDL type node.","Add a [Type] to the set of all types seen in the …","Iterator over all the known types in this universe.","Attribute definitions for a <code>ComponentInterface</code>.","Represents an attribute parsed from UDL, like <code>[ByRef]</code> or …","","","","","","","","","","","Parse a weedle <code>ExtendedAttributeList</code> into a list of …","Attributes that can be attached to an <code>enum</code> definition in …","","","Represents UDL attributes that might appear on a function.","","","Represents UDL attributes that might appear on a function …","","","Represents UDL attributes that might appear on an …","","","","","Represents UDL attributes that might appear on a …","","","","Represents UDL attributes that might appear on a method.","","","","Represents the different possible types of method call …","","Callback Interface definitions for a <code>ComponentInterface</code>.","","","","","","","","","","","Enum definitions for a <code>ComponentInterface</code>.","Represents an enum with named variants, each of which may …","","","","","","","","","","Represents an individual variant in an Enum.","","","","","","Error definitions for a <code>ComponentInterface</code>.","Represents an Error that might be thrown by …","","","","","","","","","","Function definitions for a <code>ComponentInterface</code>.","Represents a standalone function.","","","","","","","","","","","","","","","Represents an argument to a function/constructor/method …","","","","","","","","","","Support for literal values.","","","","","","","","","","","","","","","","Namespace definition for a <code>ComponentInterface</code>.","A namespace is currently just a name, but might hold more …","","Object definitions for a <code>ComponentInterface</code>.","An “object” is an opaque type that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Record definitions for a <code>ComponentInterface</code>.","Represents a “data class” style object, for passing …","","","","","","","","","","","","","","","","Low-level typesystem for the FFI layer of a component …","Represents the restricted set of low-level types that can …","","","","","","","","","","","A <code>*const c_void</code> pointer to a rust-owned <code>Arc<T></code>. If you’…","A byte buffer allocated by rust, and owned by whoever …","A borrowed reference to some raw bytes owned by foreign …","A pointer to a single function in to the foreign language.…","Represents an “extern C”-style function that will be …","","","","","","","Represents an argument to an FFI function.","","","","","","","","","Represents an enum with named variants, each of which may …","","","","Represents an Error that might be thrown by …","","","Represents an argument to a function/constructor/method …","","","","","","Represents a standalone function.","","","","","","","","","","","","","","","","","","","","A namespace is currently just a name, but might hold more …","","","","","","","","","","","","","","An “object” is an opaque type that can be …","","","","","","","","","","","Represents a “data class” style object, for passing …","","","The main public interface for this module, representing …","Every ComponentInterface gets tagged with the version of …","All of the types used in the interface.","The unique prefix that we’ll use for namespacing when …","The high-level API provided by the component.","","","","","","Parse a <code>ComponentInterface</code> from a string containing a …","The string namespace within which this API should be …","List the definitions for every Enum type in the interface.","Get an Enum definition by name, or None if no such Enum …","List the definitions for every Record type in the …","Get a Record definition by name, or None if no such …","List the definitions for every Function in the interface.","Get a Function definition by name, or None if no such …","List the definitions for every Object type in the …","Get an Object definition by name, or None if no such …","List the definitions for every Callback Interface type in …","Get a Callback interface definition by name, or None if …","List the definitions for every Error type in the …","Get an Error definition by name, or None if no such Error …","Iterate over all known types in the interface.","Get a specific type","Check whether the given type contains any (possibly …","","","","Check whether the given type contains any (possibly …","Calculate a numeric checksum for this ComponentInterface.","The namespace to use in FFI-level function definitions.","Builtin FFI function for allocating a new <code>RustBuffer</code>. …","Builtin FFI function for copying foreign-owned bytes This …","Builtin FFI function for freeing a <code>RustBuffer</code>. This is …","Builtin FFI function for reserving extra space in a …","List the definitions of all FFI functions in the …","Resolve a weedle type expression into a <code>Type</code>.","Resolve a weedle <code>ReturnType</code> expression into an optional …","Called by <code>APIBuilder</code> impls to add a newly-parsed …","Called by <code>APIBuilder</code> impls to add a newly-parsed enum …","Called by <code>APIBuilder</code> impls to add a newly-parsed record …","Called by <code>APIBuilder</code> impls to add a newly-parsed function …","Called by <code>APIBuilder</code> impls to add a newly-parsed object …","Called by <code>APIBuilder</code> impls to add a newly-parsed callback …","Called by <code>APIBuilder</code> impls to add a newly-parsed error …","Perform global consistency checks on the declared …","Automatically derive the low-level FFI functions from the …","Trait to help build a <code>ComponentInterface</code> from WedIDL …","","Trait to help convert WedIDL syntax nodes into …","","","","","","Get the name of the FfiConverter implementation for this …","","","","","","","","","","Guess the root directory of the crate from the path of …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,0,9,9,9,0,10,10,10,0,11,11,11,0,0,0,0,0,12,12,12,12,0,13,13,13,13,0,0,0,0,0,0,0,14,0,0,15,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,0,0,18,18,18,18,18,18,18,18,18,0,0,0,19,19,0,20,20,0,21,21,0,22,22,22,22,0,23,23,23,0,24,24,24,0,25,0,0,26,26,26,26,26,26,26,26,26,0,0,27,27,27,27,27,27,27,27,27,0,28,28,28,28,28,0,0,29,29,29,29,29,29,29,29,29,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,0,0,32,32,32,32,32,32,32,32,32,0,33,33,33,0,0,0,34,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,0,42,42,42,42,0,26,26,26,0,27,27,27,0,29,29,0,31,31,31,31,31,0,30,30,30,30,30,0,32,32,32,32,32,32,32,32,32,0,33,33,33,0,34,0,36,36,36,36,0,37,37,37,37,37,37,0,35,35,35,35,35,0,39,39,39,39,0,38,38,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,44,0,45,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,0,0,0,0,0,47,0,48,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,1,3,5,7,13,47,1,3,5,7,13,40,42,47,1,3,5,7,12,13,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,1,3,5,7,13,17,19,20,21,22,23,24,28,36,41,43,47,16,12,16,16,40,16,1,3,5,7,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,2,4,6,8,9,10,46,12,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,12,12,12,18,19,19,20,20,21,21,22,22,23,24,24,25,43,1,3,5,7,13,47,1,3,5,7,13,47,2,2,2,4,4,4,6,6,6,8,8,8,9,9,9,10,10,10,46,46,46,2,2,4,4,6,6,8,8,9,9,10,10,46,46],"f":[null,null,null,null,[[["type",4]],[["string",3],["error",4],["result",6]]],[[["ffitype",4]],[["string",3],["error",4],["result",6]]],[[["literal",4]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],null,null,null,[[],["string",3]],[[],["string",3]],null,null,null,[[["componentinterface",3],["config",3]]],[[["componentinterface",3],["bool",15],["config",3],["path",3]],["result",6]],[[["config",3],["path",3]],[["pathbuf",3],["result",6]]],[[["config",3],["componentinterface",3]],[["result",6],["string",3]]],[[["config",3],["componentinterface",3],["path",3]],["result",6]],[[["path",3]],["result",6]],null,null,null,[[["ffitype",4]],[["string",3],["error",4],["result",6]]],[[["literal",4]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],null,null,[[],["string",3]],null,null,null,[[["config",3],["componentinterface",3]]],[[["componentinterface",3],["config",3],["bool",15],["path",3]],["result",6]],[[["componentinterface",3],["config",3]],[["result",6],["string",3]]],[[["path",3]],["result",6]],null,null,null,[[["ffitype",4]],[["string",3],["error",4],["result",6]]],[[["literal",4]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],null,[[["str",15]],["bool",15]],null,null,null,[[],["string",3]],[[],["bool",15]],[[],["string",3]],null,null,null,[[["config",3],["componentinterface",3]]],[[["config",3],["componentinterface",3],["bool",15],["path",3]],["result",6]],[[["config",3],["componentinterface",3]],[["result",6],["string",3]]],[[["path",3]],["result",6]],null,null,null,[[["type",4]],[["string",3],["error",4],["result",6]]],[[["ffitype",4]],[["string",3],["error",4],["result",6]]],[[["literal",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8],["type",4]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],[[["display",8]],[["string",3],["error",4],["result",6]]],null,null,null,null,null,null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["bool",15]],null,null,null,[[["componentinterface",3],["config",3]]],null,null,null,[[["componentinterface",3],["config",3]]],null,null,null,[[["componentinterface",3],["config",3]]],null,null,null,null,[[["config",3],["componentinterface",3],["bool",15],["path",3]],["result",6]],[[["config",3],["componentinterface",3]],[["result",6],["bindings",3]]],[[["config",3],["componentinterface",3],["path",3]],["result",6]],[[["path",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,[[["componentinterface",3],["config",3],["bool",15],["targetlanguage",4]],["result",6]],[[["targetlanguage",4],["componentinterface",3],["config",3]],["result",6]],[[["targetlanguage",4]],["result",6]],null,null,null,null,[[["typeuniverse",3]],["result",6]],null,null,[[["typeuniverse",3]],[["type",4],["result",6]]],[[["str",15]],[["type",4],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,[[["typefinder",8]],["result",6]],[[["type",4],["str",15]],["result",6]],[[["str",15]],[["type",4],["option",4]]],[[["typeresolver",8]],[["type",4],["result",6]]],[[["type",4]],[["type",4],["result",6]]],[[]],null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[["identifierorstring",4]],["string",3]],[[["extendedattributelist",6]],[["result",6],["vec",3]]],null,null,[[],["bool",15]],null,null,[[],[["option",4],["str",15]]],null,null,[[],["bool",15]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],null,null,[[],[["option",4],["str",15]]],[[],["bool",15]],null,null,null,null,null,null,null,[[["string",3]],["callbackinterface",3]],[[],["str",15]],[[],["type",4]],[[],[["method",3],["vec",3]]],[[],["ffifunction",3]],[[["str",15]]],null,null,null,null,null,[[],["str",15]],[[],["type",4]],[[],[["variant",3],["vec",3]]],[[],["bool",15]],[[["componentinterface",3]],["bool",15]],[[["componentinterface",3]],["bool",15]],null,null,null,[[],["str",15]],[[],[["field",3],["vec",3]]],[[],["bool",15]],null,null,null,null,[[["enum",3]]],[[],["type",4]],[[],["str",15]],[[],["enum",3]],[[],[["variant",3],["vec",3]]],[[],["bool",15]],[[["componentinterface",3]],["bool",15]],null,null,null,null,null,null,null,[[],["str",15]],[[],[["argument",3],["vec",3]]],[[],[["argument",3],["vec",3]]],[[],[["type",4],["option",4]]],[[],["ffifunction",3]],[[],[["option",4],["str",15]]],[[],[["type",4],["option",4]]],[[["str",15]],["result",6]],[[["componentinterface",3]],["bool",15]],null,null,null,null,null,null,[[],["str",15]],[[],["type",4]],[[],["bool",15]],[[],[["literal",4],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["defaultvalue",4],["type",4]],[["result",6],["literal",4]]],null,null,null,null,null,null,null,null,null,null,[[["string",3]],["object",3]],[[],["str",15]],[[],["type",4]],[[],[["vec",3],["constructor",3]]],[[],[["option",4],["constructor",3]]],[[],[["vec",3],["constructor",3]]],[[],[["method",3],["vec",3]]],[[],["ffifunction",3]],[[],["bool",15]],[[["str",15]],["result",6]],[[["componentinterface",3]],["bool",15]],null,null,null,null,null,[[],["str",15]],[[],[["argument",3],["vec",3]]],[[],[["argument",3],["vec",3]]],[[],["ffifunction",3]],[[],[["option",4],["str",15]]],[[],[["type",4],["option",4]]],[[["str",15]]],[[],["bool",15]],[[["componentinterface",3]],["bool",15]],null,null,null,null,null,null,null,[[],["str",15]],[[],[["argument",3],["vec",3]]],[[],[["argument",3],["vec",3]]],[[],[["type",4],["option",4]]],[[],["ffifunction",3]],[[],[["option",4],["str",15]]],[[],[["type",4],["option",4]]],[[],["bool",15]],[[["str",15]],["result",6]],[[["componentinterface",3]],["bool",15]],null,null,null,null,[[],["str",15]],[[],["type",4]],[[],[["field",3],["vec",3]]],[[["componentinterface",3]],["bool",15]],[[["componentinterface",3]],["bool",15]],null,null,null,null,null,[[],["str",15]],[[],["type",4]],[[],[["literal",4],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],[["ffiargument",3],["vec",3]]],[[],[["option",4],["ffitype",4]]],null,null,null,[[],["str",15]],[[],["ffitype",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["result",6]],[[],["str",15]],[[],[["vec",3],["enum",3]]],[[["str",15]],[["option",4],["enum",3]]],[[],[["record",3],["vec",3]]],[[["str",15]],[["record",3],["option",4]]],[[],[["function",3],["vec",3]]],[[["str",15]],[["function",3],["option",4]]],[[],[["vec",3],["object",3]]],[[["str",15]],[["option",4],["object",3]]],[[],[["vec",3],["callbackinterface",3]]],[[["str",15]],[["option",4],["callbackinterface",3]]],[[],[["error",3],["vec",3]]],[[["str",15]],[["option",4],["error",3]]],[[],[["type",4],["vec",3]]],[[["str",15]],[["type",4],["option",4]]],[[["type",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["type",4]],["bool",15]],[[],["u64",15]],[[],["string",3]],[[],["ffifunction",3]],[[],["ffifunction",3]],[[],["ffifunction",3]],[[],["ffifunction",3]],[[],[["vec",3],["ffifunction",3]]],[[["typeresolver",8]],[["type",4],["result",6]]],[[["returntype",4]],[["result",6],["option",4]]],[[["namespace",3]],["result",6]],[[["enum",3]]],[[["record",3]]],[[["function",3]],["result",6]],[[["object",3]]],[[["callbackinterface",3]]],[[["error",3]]],[[],["result",6]],[[],["result",6]],null,[[["componentinterface",3]],["result",6]],null,[[["componentinterface",3]],["result",6]],null,null,[[["type",4]],[["string",3],["error",4],["result",6]]],[[["ffitype",4]],[["string",3],["error",4],["result",6]]],[[["type",4]],[["string",3],["result",6]]],[[["type",4]],[["string",3],["error",4],["result",6]]],null,null,null,[[["componentinterface",3]]],null,[[["option",4],["path",3],["asref",8],["bool",15]],["result",6]],[[["option",4],["path",3],["asref",8],["vec",3],["bool",15],["str",15]],["result",6]],[[["option",4],["vec",3],["path",3],["asref",8],["str",15]],["result",6]],[[["path",3]],[["result",6],["path",3]]],[[["path",3],["componentinterface",3],["option",4]],[["config",3],["result",6]]],[[["path",3],["option",4]],[["pathbuf",3],["result",6]]],[[["path",3]],[["componentinterface",3],["result",6]]],[[["path",3]],[["result",6],["string",3]]],null,null,null,[[]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["componentinterface",3]]],[[["componentinterface",3]]],[[["componentinterface",3]]],[[["componentinterface",3]]],[[["componentinterface",3]]],[[["type",4]],["ffitype",4]],[[["argument",3]],["ffiargument",3]],[[["componentinterface",3]]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["targetlanguage",4]],[[],["config",3]],[[],["type",4]],[[],["attribute",4]],[[],["enumattributes",3]],[[],["functionattributes",3]],[[],["argumentattributes",3]],[[],["interfaceattributes",3]],[[],["constructorattributes",3]],[[],["methodattributes",3]],[[],["selftype",4]],[[],["callbackinterface",3]],[[],["enum",3]],[[],["variant",3]],[[],["error",3]],[[],["function",3]],[[],["argument",3]],[[],["literal",4]],[[],["radix",4]],[[],["namespace",3]],[[],["object",3]],[[],["constructor",3]],[[],["method",3]],[[],["record",3]],[[],["field",3]],[[],["ffitype",4]],[[],["ffifunction",3]],[[],["ffiargument",3]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["config",3]],[[],["typeuniverse",3]],[[],["enumattributes",3]],[[],["functionattributes",3]],[[],["argumentattributes",3]],[[],["interfaceattributes",3]],[[],["constructorattributes",3]],[[],["methodattributes",3]],[[],["variant",3]],[[]],[[],["ffifunction",3]],[[],["componentinterface",3]],[[],["config",3]],[[["type",4]],["ordering",4]],[[["targetlanguage",4]],["bool",15]],[[["type",4]],["bool",15]],[[["type",4]],["bool",15]],[[["ffitype",4]],["bool",15]],[[["type",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[["osstr",3]],["result",6]],[[["string",3]],["result",6]],[[["extendedattribute",4]],[["result",6],["error",3]]],[[["extendedattributelist",6]],["result",6]],[[["option",4]],["result",6]],[[["extendedattributelist",6]],["result",6]],[[["option",4]],["result",6]],[[["extendedattributelist",6]],["result",6]],[[["option",4]],["result",6]],[[["extendedattributelist",6]],["result",6]],[[["option",4]],["result",6]],[[["extendedattributelist",6]],["result",6]],[[["extendedattributelist",6]],["result",6]],[[["option",4]],["result",6]],[[["identifierorstring",4]],["result",6]],[[["str",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[["write",8]],["result",6]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]],[[],["usize",15]],[[],[["str",15],["option",4]]]],"p":[[3,"Config"],[3,"KotlinWrapper"],[3,"Config"],[3,"PythonWrapper"],[3,"Config"],[3,"RubyWrapper"],[3,"Config"],[3,"BridgingHeader"],[3,"ModuleMap"],[3,"SwiftWrapper"],[3,"Bindings"],[4,"TargetLanguage"],[3,"Config"],[8,"TypeFinder"],[8,"TypeResolver"],[4,"Type"],[3,"TypeUniverse"],[4,"Attribute"],[3,"EnumAttributes"],[3,"FunctionAttributes"],[3,"ArgumentAttributes"],[3,"InterfaceAttributes"],[3,"ConstructorAttributes"],[3,"MethodAttributes"],[4,"SelfType"],[3,"CallbackInterface"],[3,"Enum"],[3,"Variant"],[3,"Error"],[3,"Function"],[3,"Argument"],[4,"Literal"],[4,"Radix"],[3,"Namespace"],[3,"Object"],[3,"Constructor"],[3,"Method"],[3,"Record"],[3,"Field"],[4,"FFIType"],[3,"FFIFunction"],[3,"FFIArgument"],[3,"ComponentInterface"],[8,"APIBuilder"],[8,"APIConverter"],[3,"RustScaffolding"],[3,"Config"],[8,"MergeWith"]]},\
"uniffi_build":{"doc":"","t":[5,5],"n":["generate_scaffolding","run_uniffi_bindgen_scaffolding"],"q":["uniffi_build",""],"d":["Generate the rust “scaffolding” required to build a …",""],"i":[0,0],"f":[[[["str",15]],["result",6]],[[["str",15]],["result",6]]],"p":[]},\
"uniffi_macros":{"doc":"Macros for <code>uniffi</code>.","t":[14,3,12,12,14,11,11,11,11,11,11,11,11,11],"n":["build_foreign_language_testcases","FilePaths","udl_file","test_scripts","include_scaffolding","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","parse"],"q":["uniffi_macros","","","","","","","","","","","","",""],"d":["A macro to build testcases for a component’s generated …","Newtype to simplifying parsing a list of file paths from …","","","A helper macro to include generated component scaffolding.","","","","","","","","",""],"i":[0,0,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["parsestream",6]],["result",6]]],"p":[[3,"FilePaths"]]}\
}');
initSearch(searchIndex);