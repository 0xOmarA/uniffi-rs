var searchIndex = JSON.parse('{\
"uniffi":{"doc":"Runtime support code for uniffi","t":[8,16,24,17,24,6,8,16,16,14,5,5,0,23,0,14,10,5,0,0,10,10,10,10,10,2,2,2,2,0,0,0,0,0,8,10,14,3,11,11,11,12,11,11,11,11,11,12,11,11,11,17,6,3,17,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,5,5,5,17,17,17,8,3,11,11,5,5,12,11,12,11,11,5,11,11,11,5,7,7,5,5,5],"n":["FfiConverter","FfiType","Object","PACKAGE_VERSION","Record","Result","RustBufferFfiConverter","RustType","RustType","assert_compatible_version","check_compatible_version","check_remaining","deps","export","ffi","impl_via_ffi_for_num_primitive","lower","lower_anyhow_error_or_panic","panichook","testing","try_lift","try_read","try_read","write","write","anyhow","bytes","log","static_assertions","ffidefault","foreignbytes","foreigncallbacks","rustbuffer","rustcalls","FfiDefault","ffi_default","impl_ffi_default_with_default","ForeignBytes","as_slice","borrow","borrow_mut","data","from","from_raw_parts","into","is_empty","len","len","try_from","try_into","type_id","EMPTY_PTR","ForeignCallback","ForeignCallbackInternals","IDX_CALLBACK_FREE","UnexpectedUniFFICallbackError","borrow","borrow","borrow_mut","borrow_mut","callback_ptr","fmt","fmt","from","from","from_reason","get_callback","into","into","new","reason","set_callback","to_string","try_from","try_from","try_into","try_into","type_id","type_id","RustBuffer","borrow","borrow_mut","capacity","data","default","destroy","destroy_into_vec","ffi_default","from","from_raw_parts","from_vec","into","is_empty","len","len","new","new_with_size","try_from","try_into","type_id","uniffi_rustbuffer_alloc","uniffi_rustbuffer_free","uniffi_rustbuffer_from_bytes","uniffi_rustbuffer_reserve","CALL_ERROR","CALL_PANIC","CALL_SUCCESS","FfiError","RustCallStatus","borrow","borrow_mut","call_with_output","call_with_result","code","default","error_buf","from","into","make_call","try_from","try_into","type_id","ensure_setup","COMPILED_COMPONENTS","UNIFFI_BINDGEN","ensure_compiled_cdylib","run_foreign_language_testcase","run_uniffi_bindgen_test"],"q":["uniffi","","","","","","","","","","","","","","","","","","","","","","","","","uniffi::deps","","","","uniffi::ffi","","","","","uniffi::ffi::ffidefault","","","uniffi::ffi::foreignbytes","","","","","","","","","","","","","","uniffi::ffi::foreigncallbacks","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi::ffi::rustbuffer","","","","","","","","","","","","","","","","","","","","","","","","","uniffi::ffi::rustcalls","","","","","","","","","","","","","","","","","","uniffi::panichook","uniffi::testing","","","",""],"d":["Trait defining how to transfer values via the FFI layer.","The low-level type used for passing values of this type …","","","","<code>Result&lt;T, Error&gt;</code>","A helper trait to implement lowering/lifting using a …","The type used in Rust code.","","Assert that the uniffi runtime version matches an expected …","Check whether the uniffi runtime version is compatible a …","A helper function to ensure we don’t read past the end …","","","","Blanket implementation of <code>FfiConverter</code> for numeric …","Lower a rust value of the target type, into an FFI value …","","","Runtime support functionality for testing generated …","Lift a rust value of the target type, from an FFI value of …","Read a rust value from a buffer, received over the FFI in …","","Write a rust value into a buffer, to send over the FFI in …","","","","","","FfiDefault trait","","Callback interfaces are traits specified in UDL which can …","","Low-level support for calling rust functions","","","","Support for reading a slice of foreign-language-allocated …","View the foreign bytes as a <code>&amp;[u8]</code>.","","","The pointer to the foreign-owned bytes.","Returns the argument unchanged.","Creates a <code>ForeignBytes</code> from its constituent fields.","Calls <code>U::from(self)</code>.","Returns true if the length of this slice of bytes is 0.","Get the length of this slice of bytes.","The length of the pointed-to data. We use an <code>i32</code> for …","","","","","ForeignCallback is the Rust representation of a foreign …","Struct to hold a foreign callback.","The method index used by the Drop trait to communicate to …","Used when internal/unexpected error happened when calling …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Support for passing an allocated-by-Rust buffer of bytes …","","","The allocated capacity of the underlying <code>Vec&lt;u8&gt;</code>. In Rust …","The pointer to the allocated buffer of the <code>Vec&lt;u8&gt;</code>.","","Reclaim memory stored in this <code>RustBuffer</code>.","Converts this <code>RustBuffer</code> back into an owned <code>Vec&lt;u8&gt;</code>.","","Returns the argument unchanged.","Creates a <code>RustBuffer</code> from its constituent fields.","Consumes a <code>Vec&lt;u8&gt;</code> and returns its raw parts as a …","Calls <code>U::from(self)</code>.","Returns true if the length of the buffer is 0.","Get the current length of the buffer, as a <code>usize</code>.","The occupied length of the underlying <code>Vec&lt;u8&gt;</code>. In Rust …","Creates an empty <code>RustBuffer</code>.","Creates a <code>RustBuffer</code> zero-filed to the requested size.","","","","This helper allocates a new byte buffer owned by the Rust …","Free a byte buffer that had previously been passed to the …","This helper copies bytes owned by the foreign-language …","Reserve additional capacity in a byte buffer that had …","","","","","Represents the success/error of a rust call","","","Wrap a rust function call and return the result directly","Wrap a rust function call that returns a …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Initialize our panic handling hook to optionally log panics","","","Ensure that a uniffi component crate is compiled and ready …","Execute the given foreign-language script as part of a …","Execute the <code>uniffi-bindgen test</code> command."],"i":[0,1,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,1,2,1,2,0,0,0,0,0,0,0,0,0,0,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,5,6,5,6,5,6,6,5,6,6,5,5,6,5,6,5,6,5,6,5,6,5,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,8,8,0,0,8,8,8,8,8,0,8,8,8,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,[[["str",0]],["bool",0]],[[["usize",0]],["result",6]],null,null,null,null,[[]],[[["error",3],["str",0]]],null,null,[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["vec",3]]],[[["vec",3]]],null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[["foreignbytes",3]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[["u8",0],["i32",0]],["foreignbytes",3]],[[]],[[["foreignbytes",3]],["bool",0]],[[["foreignbytes",3]],["usize",0]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["unexpectedunifficallbackerror",3],["formatter",3]],["result",6]],[[["unexpectedunifficallbackerror",3],["formatter",3]],["result",6]],[[]],[[]],[[["string",3]],["unexpectedunifficallbackerror",3]],[[["foreigncallbackinternals",3]],["option",4,[["foreigncallback",6]]]],[[]],[[]],[[],["foreigncallbackinternals",3]],null,[[["foreigncallbackinternals",3],["foreigncallback",6]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[],["rustbuffer",3]],[[["rustbuffer",3]]],[[["rustbuffer",3]],["vec",3,[["u8",0]]]],[[],["rustbuffer",3]],[[]],[[["u8",0],["i32",0],["i32",0]],["rustbuffer",3]],[[["vec",3,[["u8",0]]]],["rustbuffer",3]],[[]],[[["rustbuffer",3]],["bool",0]],[[["rustbuffer",3]],["usize",0]],null,[[],["rustbuffer",3]],[[["usize",0]],["rustbuffer",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["i32",0],["rustcallstatus",3]],["rustbuffer",3]],[[["rustbuffer",3],["rustcallstatus",3]]],[[["foreignbytes",3],["rustcallstatus",3]],["rustbuffer",3]],[[["rustbuffer",3],["i32",0],["rustcallstatus",3]],["rustbuffer",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["rustcallstatus",3]]],[[["rustcallstatus",3]]],null,[[],["rustcallstatus",3]],null,[[]],[[]],[[["rustcallstatus",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["str",0]],["result",6,[["utf8pathbuf",3]]]],[[["str",0],["str",0]],["result",6]],[[["str",0],["str",0]],["result",6]]],"p":[[8,"FfiConverter"],[8,"RustBufferFfiConverter"],[8,"FfiDefault"],[3,"ForeignBytes"],[3,"ForeignCallbackInternals"],[3,"UnexpectedUniFFICallbackError"],[3,"RustBuffer"],[3,"RustCallStatus"]]},\
"uniffi_bindgen":{"doc":"Uniffi: easily build cross-platform software components in …","t":[17,8,8,3,4,2,3,16,3,13,8,13,13,13,0,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,5,5,10,11,10,11,5,5,11,11,0,11,11,11,11,11,11,5,5,0,10,11,5,11,5,5,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,8,6,3,6,10,0,0,10,10,10,10,10,0,10,0,10,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,8,10,10,10,10,10,10,10,8,8,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,3,13,13,13,13,4,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,0,12,11,0,12,0,12,5,11,0,12,11,11,11,11,11,11,11,11,11,11,11,5,2,5,5,5,0,2,5,5,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,0,12,11,0,12,11,11,11,11,11,11,11,11,0,11,0,11,11,11,0,12,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,12,12,11,12,11,11,11,11,11,11,12,12,11,11,11,0,11,11,0,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,3,11,11,11,11,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,2,0,2,5,5,3,3,7,3,3,3,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,0,12,11,0,12,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,0,11,0,11,5,11,11,11,11,11,11,11,11,11,11,11,12,5,11,12,12,11,12,11,11,11,11,11,12,11,11,11,0,11,11,0,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,2,2,0,5,5,5,3,17,3,11,11,11,11,11,12,11,12,12,11,11,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,3,2,11,11,5,11,0,2,12,11,12,12,5,11,11,11,5,3,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,12,11,11,11,11,11,11,11,0,12,12,12,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,12,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,12,11,11,12,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,12,11,11,11,11,11,0,11,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,3,11,11,11,11,12,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,8,8,3,13,3,3,3,13,13,13,3,13,3,2,2,2,3,13,3,13,13,4,3,3,13,3,13,4,3,3,13,2,13,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,12,12,12,11,11,11,11,12,11,12,0,11,11,12,12,11,11,11,10,5,12,11,12,12,11,0,12,11,12,0,11,12,0,12,12,12,12,12,11,12,11,11,11,11,12,12,11,11,11,11,0,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,11,12,11,11,0,11,12,12,12,12,10,0,11,12,12,11,11,11,12,12,12,11,11,11,11,11,12,12,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,4,13,13,3,13,13,3,13,13,3,3,3,13,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,3,3,11,12,12,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,13,13,13,13,13,13,13,13,4,13,13,4,13,13,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,12,11,11,11,11,3,3,3,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,3,13,13,13,13,13,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,8,5,10,5,5,0,0,5,5,3,11,11,11,5,5,5,5,5,5,5,11,11,11,11,5,12,12,11,11,11,11,3,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5],"n":["BINDGEN_VERSION","BindingGenerator","BindingGeneratorConfig","Cli","Commands","ComponentInterface","Config","Config","EmptyBindingGeneratorConfig","Generate","MergeWith","PrintJson","Scaffolding","Test","__unused","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","backend","bindings","bindings","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command","default","deserialize","deserialize","dump_json","eq","equivalent","fmt","fmt","format_code_with_rustfmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","generate_bindings","generate_component_scaffolding","generate_external_bindings","get_config","get_config_defaults","get_config_defaults","get_entry_from_bindings_table","get_entry_from_bindings_table","get_out_dir","guess_crate_root","has_subcommand","hash","interface","into","into","into","into","into_app","into_app_for_update","load_bindings_config","load_bindings_config_toml","macro_metadata","merge_with","merge_with","parse_udl","partial_cmp","print_json","run_main","run_tests","scaffolding","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","write_bindings","config","config","config","language","lib_file","library_file","no_format","no_format","out_dir","out_dir","path","test_scripts","udl_file","udl_file","udl_file","0","CodeDeclaration","CodeOracle","CodeType","Literal","TemplateExpression","TypeIdentifier","class_name","config","declarations","enum_variant_name","error_name","ffi_type_label","find","fn_name","oracle","type_label","types","var_name","0","TemplateExpression","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","render","serialize","to_owned","try_from","try_into","type_id","CodeDeclaration","definition_code","definition_code","imports","imports","initialization_code","initialization_code","CodeOracle","class_name","enum_variant_name","error_name","ffi_type_label","find","fn_name","var_name","CodeType","CodeTypeDispatch","canonical_name","canonical_name","code_type_impl","coerce","coerce","ffi_converter_name","ffi_converter_name","helper_code","helper_code","imports","imports","initialization_fn","initialization_fn","lift","lift","literal","literal","lower","lower","read","read","type_label","write","write","Config","Kotlin","Python","Ruby","Swift","TargetLanguage","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compile_bindings","default","deserialize","eq","equivalent","fmt","from","from","from","hash","into","into","kotlin","kotlin","merge_with","python","python","ruby","ruby","run_script","serialize","swift","swift","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","write_bindings","Config","classpath_for_testing","compile_bindings","full_bindings_path","gen_kotlin","generate_bindings","run_script","write_bindings","Config","CustomTypeConfig","KotlinCodeOracle","KotlinWrapper","TypeRenderer","add_import","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_interface","cdylib_name","cdylib_name","ci","ci","class_name","clone","clone","clone","clone_into","clone_into","clone_into","compounds","config","create_code_type","custom","custom_types","default","default","deserialize","deserialize","dyn_render","dyn_render","dyn_render_into","dyn_render_into","enum_","enum_variant_name","error","error_name","extension","extension","external","external_packages","external_type_package_name","ffi_type_label","filters","find","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","from","from_custom","generate_bindings","imports","imports","imports","include_once_check","include_once_names","initialization_fns","into","into","into","into","into","into_custom","kotlin_config","merge_with","mime_type","mime_type","miscellany","new","new","object","package_name","package_name","primitives","record","render_into","render_into","serialize","serialize","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_helper_code","type_id","type_id","type_id","type_id","type_id","type_imports","type_name","var_name","CallbackInterfaceCodeType","borrow","borrow_mut","canonical_name","from","id","initialization_fn","into","literal","new","try_from","try_into","type_id","type_label","MapCodeType","OptionalCodeType","SequenceCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonical_name","canonical_name","canonical_name","from","from","from","impl_code_type_for_compound","inner","inner","inner","inner","into","into","into","key","key","literal","literal","literal","new","new","new","render_literal","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","value","value","CustomCodeType","borrow","borrow_mut","canonical_name","from","into","literal","name","new","try_from","try_into","type_id","type_label","EnumCodeType","borrow","borrow_mut","canonical_name","from","id","into","literal","new","try_from","try_into","type_id","type_label","ErrorCodeType","borrow","borrow_mut","canonical_name","from","id","into","literal","new","try_from","try_into","type_id","type_label","ExternalCodeType","borrow","borrow_mut","canonical_name","from","into","literal","name","new","try_from","try_into","type_id","type_label","allocation_size_fn","canonical_name","class_name","enum_variant","exception_name","ffi_converter_name","ffi_type_name","fn_name","lift_fn","lower_fn","oracle","read_fn","render_literal","type_name","var_name","write_fn","DurationCodeType","TimestampCodeType","borrow","borrow","borrow_mut","borrow_mut","canonical_name","canonical_name","from","from","impl_code_type_for_miscellany","into","into","literal","literal","try_from","try_from","try_into","try_into","type_id","type_id","type_label","type_label","ObjectCodeType","borrow","borrow_mut","canonical_name","from","id","into","literal","new","try_from","try_into","type_id","type_label","BooleanCodeType","Float32CodeType","Float64CodeType","Int16CodeType","Int32CodeType","Int64CodeType","Int8CodeType","StringCodeType","UInt16CodeType","UInt32CodeType","UInt64CodeType","UInt8CodeType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","impl_code_type_for_primitive","into","into","into","into","into","into","into","into","into","into","into","into","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","render_literal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","RecordCodeType","borrow","borrow_mut","canonical_name","from","id","into","literal","new","try_from","try_into","type_id","type_label","Config","gen_python","generate_python_bindings","run_script","write_bindings","Config","CustomTypeConfig","KEYWORDS","PythonCodeOracle","PythonWrapper","TypeRenderer","add_import","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_interface","cdylib_name","cdylib_name","ci","ci","class_name","clone","clone","clone","clone_into","clone_into","clone_into","compounds","config","create_code_type","custom","custom_types","default","default","default","deserialize","deserialize","dyn_render","dyn_render","dyn_render_into","dyn_render_into","enum_","enum_variant_name","error","error_name","extension","extension","external","ffi_type_label","filters","find","fixup_keyword","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","from","from_custom","generate_python_bindings","imports","imports","imports","include_once_check","include_once_names","into","into","into","into","into","into_custom","merge_with","mime_type","mime_type","miscellany","new","new","object","primitives","python_config","record","render_into","render_into","serialize","serialize","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_helper_code","type_id","type_id","type_id","type_id","type_id","type_imports","var_name","CallbackInterfaceCodeType","borrow","borrow_mut","canonical_name","coerce","from","id","into","literal","new","try_from","try_into","type_id","type_label","MapCodeType","OptionalCodeType","SequenceCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonical_name","canonical_name","canonical_name","coerce","coerce","coerce","from","from","from","inner","inner","into","into","into","key","literal","literal","literal","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","value","CustomCodeType","borrow","borrow_mut","canonical_name","coerce","from","into","name","new","try_from","try_into","type_id","type_label","EnumCodeType","borrow","borrow_mut","canonical_name","coerce","from","id","into","literal","new","try_from","try_into","type_id","type_label","ErrorCodeType","borrow","borrow_mut","canonical_name","coerce","from","id","into","literal","new","try_from","try_into","type_id","type_label","ExternalCodeType","borrow","borrow_mut","canonical_name","coerce","from","into","name","new","try_from","try_into","type_id","type_label","canonical_name","class_name","coerce_py","enum_variant_py","ffi_converter_name","ffi_type_name","fn_name","lift_fn","literal_py","lower_fn","oracle","read_fn","type_name","var_name","write_fn","DurationCodeType","TimestampCodeType","borrow","borrow","borrow_mut","borrow_mut","canonical_name","canonical_name","coerce","coerce","from","from","impl_code_type_for_miscellany","into","into","literal","literal","try_from","try_from","try_into","try_into","type_id","type_id","type_label","type_label","ObjectCodeType","borrow","borrow_mut","canonical_name","coerce","from","id","into","literal","new","try_from","try_into","type_id","type_label","BooleanCodeType","Float32CodeType","Float64CodeType","Int16CodeType","Int32CodeType","Int64CodeType","Int8CodeType","StringCodeType","UInt16CodeType","UInt32CodeType","UInt64CodeType","UInt8CodeType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coerce","coerce","coerce","coerce","coerce","coerce","coerce","coerce","coerce","coerce","coerce","coerce","from","from","from","from","from","from","from","from","from","from","from","from","impl_code_type_for_primitive","into","into","into","into","into","into","into","into","into","into","into","into","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","render_literal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","RecordCodeType","borrow","borrow_mut","canonical_name","coerce","from","id","into","literal","new","try_from","try_into","type_id","type_label","Config","RubyWrapper","gen_ruby","generate_ruby_bindings","run_script","write_bindings","Config","RESERVED_WORDS","RubyWrapper","borrow","borrow","borrow_mut","borrow_mut","cdylib_name","cdylib_name","cdylib_path","cdylib_path","ci","clone","clone_into","config","custom_cdylib_path","default","deserialize","dyn_render","dyn_render_into","extension","filters","fmt","fmt","from","from","from","into","into","is_reserved_word","merge_with","mime_type","new","render_into","serialize","size_hint","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","class_name_rb","coerce_rb","enum_name_rb","fn_name_rb","lift_rb","literal_rb","lower_rb","type_ffi","var_name_rb","Bindings","Config","borrow","borrow_mut","compile_bindings","from","gen_swift","generate_bindings","header","into","library","modulemap","run_script","try_from","try_into","type_id","write_bindings","BridgingHeader","Config","CustomTypeConfig","ModuleMap","SwiftCodeOracle","SwiftWrapper","TypeRenderer","_ci","_config","add_import","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_interface","cdylib_name","cdylib_name","ci","ci","ci","class_name","clone","clone","clone","clone_into","clone_into","clone_into","compounds","config","config","config","create_code_type","custom","custom_types","default","default","deserialize","deserialize","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","enum_","enum_variant_name","error","error_name","extension","extension","extension","extension","ffi_module_filename","ffi_module_filename","ffi_module_name","ffi_module_name","ffi_type_label","filters","find","fmt","fmt","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","from","from","from","from_custom","generate_bindings","generate_module_map","generate_module_map","header_filename","imports","imports","imports","include_once_check","include_once_names","initialization_fns","into","into","into","into","into","into","into","into_custom","merge_with","mime_type","mime_type","mime_type","mime_type","miscellany","module_name","module_name","modulemap_filename","new","new","new","new","object","omit_argument_labels","omit_argument_labels","primitives","record","render_into","render_into","render_into","render_into","serialize","serialize","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_helper_code","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_imports","type_name","var_name","CallbackInterfaceCodeType","borrow","borrow_mut","canonical_name","from","id","into","new","try_from","try_into","type_id","type_label","MapCodeType","OptionalCodeType","SequenceCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonical_name","canonical_name","canonical_name","from","from","from","inner","inner","into","into","into","key","literal","literal","literal","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","value","CustomCodeType","borrow","borrow_mut","canonical_name","from","into","name","new","try_from","try_into","type_id","type_label","EnumCodeType","borrow","borrow_mut","canonical_name","from","id","into","literal","new","try_from","try_into","type_id","type_label","ErrorCodeType","borrow","borrow_mut","canonical_name","from","id","into","new","try_from","try_into","type_id","type_label","canonical_name","class_name","enum_variant_swift","ffi_converter_name","ffi_type_name","fn_name","lift_fn","literal_swift","lower_fn","oracle","read_fn","type_ffi_lowered","type_name","var_name","write_fn","DurationCodeType","TimestampCodeType","borrow","borrow","borrow_mut","borrow_mut","canonical_name","canonical_name","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","type_label","type_label","ObjectCodeType","borrow","borrow_mut","canonical_name","from","id","into","new","try_from","try_into","type_id","type_label","BooleanCodeType","Float32CodeType","Float64CodeType","Int16CodeType","Int32CodeType","Int64CodeType","Int8CodeType","StringCodeType","UInt16CodeType","UInt32CodeType","UInt64CodeType","UInt8CodeType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","impl_code_type_for_primitive","into","into","into","into","into","into","into","into","into","into","into","into","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","literal","render_literal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","type_label","RecordCodeType","borrow","borrow_mut","canonical_name","from","id","into","new","try_from","try_into","type_id","type_label","APIBuilder","APIConverter","Argument","Boolean","CallbackInterface","ComponentInterface","Constructor","Decimal","EmptyMap","EmptySequence","Enum","Enum","Error","FFIArgument","FFIFunction","FFIType","Field","Float","Function","Hexadecimal","Int","Literal","Method","Namespace","Null","Object","Octal","Radix","Record","RecursiveTypeIterator","String","Type","UInt","add_callback_interface_definition","add_enum_definition","add_error_definition","add_function_definition","add_method_definition","add_namespace_definition","add_object_definition","add_object_free_fn","add_pending_type","add_record_definition","advance_to_next_type","arguments","arguments","arguments","attributes","attributes","attributes","attributes","borrow","borrow","borrow_mut","borrow_mut","by_ref","callback_interface_definitions","callback_interfaces","callbacks","check_consistency","checksum","ci","constructors","contains_map_types","contains_optional_types","contains_sequence_types","convert","convert_type","current","default","default","default","derive_ffi_funcs","enum_","enum_","enum_definitions","enums","error","error_definitions","errors","ffi","ffi_func","ffi_func","ffi_func","ffi_func_free","ffi_init_callback","ffi_namespace","ffi_namespace","ffi_rustbuffer_alloc","ffi_rustbuffer_free","ffi_rustbuffer_from_bytes","ffi_rustbuffer_reserve","fields","flat","fmt","from","from","from_webidl","function","function_definitions","functions","get_callback_interface_definition","get_enum_definition","get_error_definition","get_function_definition","get_object_definition","get_or_insert_object","get_record_definition","get_type","hash","into","into","into_iter","item_contains_object_references","item_contains_unsigned_types","iter_custom_types","iter_external_types","iter_ffi_function_definitions","iter_rust_buffer_ffi_function_definitions","iter_types","iter_types_in_item","iter_user_ffi_function_definitions","literal","methods","methods","name","name","name","name","name","name","name","name","name","name","name","namespace","namespace","namespace","new","next","object","object_definitions","object_name","objects","optional","pending","process","record","record_definitions","records","required","resolve_return_type_expression","resolve_type_expression","resolve_types","return_type","return_type","seen","should_generate_error_read","try_from","try_from","try_into","try_into","type_","type_","type_id","type_id","types","types","uniffi_version","uses_deprecated_threadsafe_attribute","variants","0","0","0","0","0","0","1","1","1","1","2","2","0","0","0","0","0","0","0","ArgumentAttributes","Attribute","ByArc","ByRef","ConstructorAttributes","Custom","Enum","EnumAttributes","Error","External","FunctionAttributes","InterfaceAttributes","MethodAttributes","Name","SelfType","SelfType","Threadsafe","Throws","TypedefAttributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_ref","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_enum_attr","contains_error_attr","contains_error_attr","default","default","default","default","default","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_crate_name","get_name","get_self_by_arc","get_throws_err","get_throws_err","get_throws_err","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_custom","is_enum","is_error","name_from_id_or_string","parse_attributes","threadsafe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","CallbackInterface","borrow","borrow_mut","clone","clone_into","code_type_impl","derive_ffi_funcs","ffi_init_callback","ffi_init_callback","fmt","from","hash","into","iter_types","methods","methods","name","name","new","to_owned","try_from","try_into","type_","type_id","Enum","Variant","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code_type_impl","default","fields","fields","flat","fmt","fmt","from","from","has_fields","hash","hash","into","into","is_flat","iter_types","iter_types","name","name","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_id","type_id","variants","variants","Error","borrow","borrow_mut","clone","clone_into","code_type_impl","enum_","fmt","from","from_enum","hash","into","is_flat","iter_types","name","name","to_owned","try_from","try_into","type_","type_id","variants","wrapped_enum","FFIArgument","FFIFunction","FFIType","Float32","Float64","ForeignBytes","ForeignCallback","Int16","Int32","Int64","Int8","RustArcPtr","RustBuffer","UInt16","UInt32","UInt64","UInt8","arguments","arguments","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","name","name","name","name","ne","return_type","return_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","0","Argument","Function","arguments","arguments","attributes","borrow","borrow","borrow_mut","borrow_mut","by_ref","by_ref","clone","clone","clone_into","clone_into","code_type_impl","default","default_value","derive_ffi_func","ffi_func","ffi_func","fmt","fmt","from","from","from","from","full_arguments","hash","hash","into","into","iter_types","name","name","name","name","optional","return_type","return_type","throws","throws_name","throws_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_","type_id","type_id","Boolean","Decimal","EmptyMap","EmptySequence","Enum","Float","Hexadecimal","Int","Literal","Null","Octal","Radix","String","UInt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_default_value","fmt","fmt","from","from","hash","hash","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","1","1","1","1","2","2","Namespace","borrow","borrow_mut","clone","clone_into","fmt","from","hash","into","name","to_owned","try_from","try_into","type_id","Constructor","Method","Object","alternate_constructors","arguments","arguments","arguments","arguments","attributes","attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code_type_impl","constructors","constructors","default","derive_ffi_func","derive_ffi_func","derive_ffi_funcs","ffi_func","ffi_func","ffi_func","ffi_func","ffi_func_free","ffi_object_free","fmt","fmt","fmt","from","from","from","from","full_arguments","full_arguments","get_method","hash","hash","hash","into","into","into","is_primary_constructor","iter_ffi_function_definitions","iter_types","iter_types","iter_types","methods","methods","name","name","name","name","name","name","new","object_name","primary_constructor","return_type","return_type","takes_self_by_arc","throws","throws","throws_name","throws_name","throws_type","throws_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","uses_deprecated_threadsafe_attribute","uses_deprecated_threadsafe_attribute","Field","Record","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code_type_impl","code_type_impl","default","default_value","fields","fields","fmt","fmt","from","from","from","from","hash","hash","into","into","iter_types","iter_types","name","name","name","name","required","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_","type_","type_id","type_id","Boolean","CallbackInterface","Custom","Duration","Enum","Error","External","Float32","Float64","Int16","Int32","Int64","Int8","Map","Object","Optional","Record","Sequence","String","Timestamp","Type","TypeIterator","TypeUniverse","UInt16","UInt32","UInt64","UInt8","Unresolved","add_known_type","add_type_definition","add_type_definitions_from","all_known_types","borrow","borrow","borrow_mut","borrow_mut","canonical_name","clone","clone_into","cmp","code_type_impl","default","eq","equivalent","ffi_type","finder","fmt","fmt","from","from","get_type_definition","hash","into","into","iter_known_types","iter_types","ne","partial_cmp","resolve_type_expression","resolver","to_owned","try_from","try_from","try_into","try_into","type_definitions","type_id","type_id","0","0","0","0","0","0","0","0","1","builtin","crate_name","name","name","name","TypeFinder","add_type_definitions_to","TypeResolver","resolve_builtin_type","resolve_type_expression","add_to_ci","add_to_ci_from_library","ci","extract","extract_from_library","add_to_ci","ExtractedItems","borrow","borrow_mut","default","extract_from_archive","extract_from_bytes","extract_from_elf","extract_from_library","extract_from_mach","extract_from_macho","extract_from_pe","extract_item","from","into","into_metadata","is_metadata_symbol","items","names","new","try_from","try_into","type_id","RustScaffolding","borrow","borrow_mut","ci","dyn_render","dyn_render_into","extension","filters","fmt","from","into","mime_type","new","render_into","size_hint","to_string","try_from","try_into","type_id","uniffi_version","crate_name_rs","ffi_converter","ffi_converter_name","type_ffi","type_rs"],"q":["uniffi_bindgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::Commands","","","","","","","","","","","","","","","uniffi_bindgen::backend","","","","","","","","","","","","","","","","","","","uniffi_bindgen::backend::config","","","","","","","","","","","","","","","","","uniffi_bindgen::backend::declarations","","","","","","","uniffi_bindgen::backend::oracle","","","","","","","","uniffi_bindgen::backend::types","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::callback_interface","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::compounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::custom","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::enum_","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::error","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::external","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::filters","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::miscellany","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::object","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::kotlin::gen_kotlin::record","","","","","","","","","","","","","uniffi_bindgen::bindings::python","","","","","uniffi_bindgen::bindings::python::gen_python","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::callback_interface","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::compounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::custom","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::enum_","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::error","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::external","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::filters","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::miscellany","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::object","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::python::gen_python::record","","","","","","","","","","","","","","uniffi_bindgen::bindings::ruby","","","","","","uniffi_bindgen::bindings::ruby::gen_ruby","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::ruby::gen_ruby::filters","","","","","","","","","uniffi_bindgen::bindings::swift","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::callback_interface","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::compounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::custom","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::enum_","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::error","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::filters","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::miscellany","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::object","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::bindings::swift::gen_swift::record","","","","","","","","","","","","uniffi_bindgen::interfaceuniffi_bindgen::interface::Literal","","","","","","","","","","","","uniffi_bindgen::interface::attributesuniffi_bindgen::interface::attributes::Attribute","","","","uniffi_bindgen::interface::callbacks","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::enum_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::error","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::ffi::FFIType","uniffi_bindgen::interface::function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::literal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::literal::Literal","","","","","","","","","","","","uniffi_bindgen::interface::namespace","","","","","","","","","","","","","","uniffi_bindgen::interface::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::record","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::interface::types::Type","","","","","","","","","","","","","","uniffi_bindgen::interface::types::finder","","uniffi_bindgen::interface::types::resolver","","","uniffi_bindgen::macro_metadata","","","","","uniffi_bindgen::macro_metadata::ci","uniffi_bindgen::macro_metadata::extract","","","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::scaffolding","","","","","","","","","","","","","","","","","","","","uniffi_bindgen::scaffolding::filters","","","",""],"d":["","A trait representing a UniFFI Binding Generator","A trait representing a Binding Generator Configuration","Scaffolding and bindings generator for Rust","","","","Associated type representing a the bindings-specifig …","Binding generator config with no members","Generate foreign language bindings","","Print the JSON representation of the interface from a …","Generate Rust scaffolding code","Run test scripts against foreign language bindings.","","","","","","","Generate foreign language bindings for a uniffi component.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate bindings for an external binding generator …","","Get default config values from the <code>ComponentInterface</code>","","Get the entry for this config from the <code>bindings</code> table.","","","Guess the root directory of the crate from the path of its …","","","Component Interface Definition.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the bindings to the output directory","Path to the optional uniffi config file. If not provided, …","Path to the optional uniffi config file. If not provided, …","Path to the optional uniffi config file. If not provided, …","Foreign language(s) for which to build bindings.","Extract proc-macro metadata from a native lib (cdylib or …","Path to the library the scripts will be testing against.","Do not try to format the generated bindings.","Do not try to format the generated bindings.","Directory in which to write generated files. Default is …","Directory in which to write generated files. Default is …","Path to the library file (.so, .dll, .dylib, or .a)","Foreign language(s) test scripts to run.","Path to the UDL file.","Path to the UDL file.","Path to the UDL file.","","A trait that is able to render a declaration about a …","An object to look up a foreign language code specific …","A Trait to emit foreign language code to handle referenced …","","Config value for template expressions","","Get the idiomatic rendering of a class name (for enums, …","","","Get the idiomatic rendering of an individual enum variant.","Get the idiomatic rendering of an error name.","","","Get the idiomatic rendering of a function name.","","The language specific label used to reference this type. …","Backend traits","Get the idiomatic rendering of a variable name.","","Config value for template expressions","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A trait that is able to render a declaration about a …","Code which represents this member. e.g. the foreign …","Code which represents this member. e.g. the foreign …","A list of imports that are needed if this type is in use. …","A list of imports that are needed if this type is in use. …","Code (one or more statements) that is run on start-up of …","Code (one or more statements) that is run on start-up of …","An object to look up a foreign language code specific …","Get the idiomatic rendering of a class name (for enums, …","Get the idiomatic rendering of an individual enum variant.","Get the idiomatic rendering of an error name.","","","Get the idiomatic rendering of a function name.","Get the idiomatic rendering of a variable name.","A Trait to emit foreign language code to handle referenced …","This trait is used to implement <code>CodeType</code> for <code>Type</code> and …","A representation of this type label that can be used as …","A representation of this type label that can be used as …","","An expression to coerce the given variable to the expected …","An expression to coerce the given variable to the expected …","Name of the FfiConverter","Name of the FfiConverter","The lift/lower/read/write methods above must be producing …","The lift/lower/read/write methods above must be producing …","A list of imports that are needed if this type is in use. …","A list of imports that are needed if this type is in use. …","Function to run at startup","Function to run at startup","An expression for lifting a value from something we …","An expression for lifting a value from something we …","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","An expression for lowering a value into something we can …","An expression for lowering a value into something we can …","An expression for reading a value from a byte buffer.","An expression for reading a value from a byte buffer.","The language specific label used to reference this type. …","An expression for writing a value into a byte buffer.","An expression for writing a value into a byte buffer.","","","","","","Enumeration of all foreign language targets currently …","","","","","","","","","Compile generated foreign language bindings so they’re …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Execute the given script via foreign language …","","Swift bindings backend for UniFFI","","","","","","","","","","","","","Generate foreign language bindings from a compiled <code>uniffi</code> …","","","Generate kotlin bindings for the given namespace, then use …","","","","Execute the specifed kotlin script, with classpath based …","","","","","","Renders Kotlin helper code for all types","","","","","","","","","","","","","","","","","Get the idiomatic Kotlin rendering of a class name (for …","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Kotlin rendering of an individual enum …","","Get the idiomatic Kotlin rendering of an exception name","","","","","","","","","","","","","Get the idiomatic Kotlin rendering of a function name.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Kotlin rendering of a variable name.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Get the idiomatic Kotlin rendering of a class name (for …","Get the idiomatic Kotlin rendering of an individual enum …","Get the idiomatic Kotlin rendering of an exception name, …","","Get the Kotlin syntax for representing a given low-level …","Get the idiomatic Kotlin rendering of a function name.","","","","","","","Get the idiomatic Kotlin rendering of a variable name.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Execute the specifed python script, with environment based …","","","","","","","Renders Python helper code for all types","","","","","","","","","","","","","","","","","Get the idiomatic Python rendering of a class name (for …","","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Python rendering of an individual enum …","","Get the idiomatic Python rendering of an exception name …","","","","","","","","","","","","Get the idiomatic Python rendering of a function name.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Python rendering of a variable name.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Get the idiomatic Python rendering of a class name (for …","","Get the idiomatic Python rendering of an individual enum …","","Get the Python syntax for representing a given low-level …","Get the idiomatic Python rendering of a function name.","","","","","","","Get the idiomatic Python rendering of a variable name.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Execute the specifed ruby script, with environment based …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The Swift bindings generated from a <code>ComponentInterface</code>.","","","","Compile UniFFI component bindings for Swift for use from …","Returns the argument unchanged.","","","The contents of the generated <code>.h</code> file, as a string.","Calls <code>U::from(self)</code>.","The contents of the generated <code>.swift</code> file, as a string.","The contents of the generated <code>.modulemap</code> file, as a string.","Run a Swift script, allowing it to load modules from the …","","","","Write UniFFI component bindings for Swift as files on disk.","Template for generating the <code>.h</code> file that defines the …","Config options for the caller to customize the generated …","","Template for generating the <code>.modulemap</code> file that exposes …","","","Renders Swift helper code for all types","","","","","","","","","","","","","","","","","","","The name of the compiled Rust library containing the FFI …","","","","","Get the idiomatic Swift rendering of a class name (for …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Swift rendering of an individual enum …","","Get the idiomatic Swift rendering of an exception name.","","","","","The filename stem for the lower-level C module containing …","","The name of the lower-level C module containing the FFI …","","","","","","","","","","","Get the idiomatic Swift rendering of a function name.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate UniFFI component bindings for Swift, as strings …","Whether to generate a <code>.modulemap</code> file for the lower-level …","","The name of the <code>.h</code> file for the lower-level C module with …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The name of the Swift module containing the high-level …","","The name of the <code>.modulemap</code> file for the lower-level C …","","","","","","Whether to omit argument labels in Swift function …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the idiomatic Swift rendering of a variable name.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Get the idiomatic Swift rendering of a class name (for …","Get the idiomatic Swift rendering of an individual enum …","","Get the Swift syntax for representing a given low-level …","Get the idiomatic Swift rendering of a function name.","","","","","","Get the type that a type is lowered into.  This is subtly …","","Get the idiomatic Swift rendering of a variable name.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Trait to help build a <code>ComponentInterface</code> from WedIDL …","Trait to help convert WedIDL syntax nodes into …","Represents an argument to a function/constructor/method …","","","The main public interface for this module, representing …","","","","","Represents an enum with named variants, each of which may …","","Represents an Error that might be thrown by …","","","","","","Represents a standalone function.","","","","","A namespace is currently just a name, but might hold more …","","An “object” is an opaque type that can be instantiated …","","","Represents a “data class” style object, for passing …","Stateful iterator for yielding all types contained in a …","","","","Called by <code>APIBuilder</code> impls to add a newly-parsed callback …","Called by <code>APIBuilder</code> impls to add a newly-parsed enum …","Called by <code>APIBuilder</code> impls to add a newly-parsed error …","Called by <code>APIBuilder</code> impls to add a newly-parsed function …","","Called by <code>APIBuilder</code> impls to add a newly-parsed namespace …","Called by <code>APIBuilder</code> impls to add a newly-parsed object …","","Add a new type to the queue of pending types, if not …","Called by <code>APIBuilder</code> impls to add a newly-parsed record …","Advance the iterator to recurse into the next pending …","","","","Attribute definitions for a <code>ComponentInterface</code>.","","","","","","","","","Get the definitions for every Callback Interface type in …","","Callback Interface definitions for a <code>ComponentInterface</code>.","Perform global consistency checks on the declared …","Calculate a numeric checksum for this ComponentInterface.","The <code>ComponentInterface</code> from which this iterator was …","","Check whether the interface contains any map types","Check whether the interface contains any optional types","Check whether the interface contains any sequence types","","","The currently-active iterator from which we’re yielding.","","","","Automatically derive the low-level FFI functions from the …","Enum definitions for a <code>ComponentInterface</code>.","","Get the definitions for every Enum type in the interface.","The high-level API provided by the component.","Error definitions for a <code>ComponentInterface</code>.","Get the definitions for every Error type in the interface.","","Low-level typesystem for the FFI layer of a component …","","","","","","The namespace to use in FFI-level function definitions.","The internal unique prefix used to namespace FFI symbols","Builtin FFI function for allocating a new <code>RustBuffer</code>. This …","Builtin FFI function for freeing a <code>RustBuffer</code>. This is …","Builtin FFI function for copying foreign-owned bytes This …","Builtin FFI function for reserving extra space in a …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Parse a <code>ComponentInterface</code> from a string containing a …","Function definitions for a <code>ComponentInterface</code>.","Get the definitions for every Function in the interface.","","Get a Callback interface definition by name, or None if no …","Get an Enum definition by name, or None if no such Enum is …","Get an Error definition by name, or None if no such Error …","Get a Function definition by name, or None if no such …","Get an Object definition by name, or None if no such …","","Get a Record definition by name, or None if no such Record …","Get a specific type","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Check whether the given item contains any (possibly …","Check whether the given item contains any (possibly …","Get details about all <code>Type::Custom</code> types","Get details about all <code>Type::External</code> types","List the definitions of all FFI functions in the interface.","List all FFI functions definitions for RustBuffer …","Iterate over all known types in the interface.","Iterate over all types contained in the given item.","List all FFI functions definitions for user-defined …","Support for literal values.","","","","","","","","","","","","","","Namespace definition for a <code>ComponentInterface</code>.","The string namespace within which this API should be …","The unique prefix that we’ll use for namespacing when …","Allocate a new <code>RecursiveTypeIterator</code> over the given item.","","Object definitions for a <code>ComponentInterface</code>.","Get the definitions for every Object type in the interface.","","","","A queue of user-defined types that we need to recurse into.","","Record definitions for a <code>ComponentInterface</code>.","Get the definitions for every Record type in the interface.","","","Resolve a weedle <code>ReturnType</code> expression into an optional …","Resolve a weedle type expression into a <code>Type</code>.","Resolve unresolved types within proc-macro function / …","","","A set of names of user-defined types that we have already …","Should we generate read (and lift) functions for errors?","","","","","","","","","Basic typesystem for defining a component interface.","All of the types used in the interface.","Every ComponentInterface gets tagged with the version of …","","","","","","","","","","","","","","","","","","","","","","Represents UDL attributes that might appear on a function …","Represents an attribute parsed from UDL, like <code>[ByRef]</code> or …","","","Represents UDL attributes that might appear on a …","","","Attributes that can be attached to an <code>enum</code> definition in …","","","Represents UDL attributes that might appear on a function.","Represents UDL attributes that might appear on an <code>interface</code>…","Represents UDL attributes that might appear on a method.","","Represents the different possible types of method call …","","","","Represents UDL attributes that might appear on a typedef","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Parse a weedle <code>ExtendedAttributeList</code> into a list of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents an enum with named variants, each of which may …","Represents an individual variant in an Enum.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Represents an Error that might be thrown by …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents an argument to an FFI function.","Represents an “extern C”-style function that will be …","Represents the restricted set of low-level types that can …","","","A borrowed reference to some raw bytes owned by foreign …","A pointer to a single function in to the foreign language. …","","","","","A <code>*const c_void</code> pointer to a rust-owned <code>Arc&lt;T&gt;</code>. If you’…","A byte buffer allocated by rust, and owned by whoever …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Represents an argument to a function/constructor/method …","Represents a standalone function.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","A namespace is currently just a name, but might hold more …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","An “object” is an opaque type that can be instantiated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a “data class” style object, for passing …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents all the different high-level types that can be …","An abstract type for an iterator over &amp;Type references.","The set of all possible types used in a particular …","","","","","","Add a Type to the set of all types seen in the component …","Add the definition of a named Type.","Add the definitions of all named Types from a given WebIDL …","","","","","","Get the canonical, unique-within-this-component name for a …","","","","","","","","","Helpers for finding the named types defined in a UDL …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the Type corresponding to a given name, if any.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterator over all the known types in this universe.","","","","Get the Type corresponding to a given WebIDL type node.","Helpers for resolving UDL type expressions into concrete …","","","","","","","","","","","","","","","","","","","","","","","Trait to help with an early “type discovery” phase …","","Trait to help resolving an UDL type node to a <code>Type</code>.","Resolve built-in API types by name.","","Add Metadata items to the ComponentInterface","","","","Extract metadata written by the <code>uniffi::export</code> macro from …","Add Metadata items to the ComponentInterface","Container for extracted metadata items","","","","","","","Extract metadata written by the <code>uniffi::export</code> macro from …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","symbol names for the extracted items, we use this to …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Get the name of the FfiConverter implementation for this …","",""],"i":[0,0,0,0,0,0,0,1,0,2,0,2,2,2,0,3,3,2,2,0,0,4,5,4,3,2,5,4,3,2,5,4,5,4,5,3,4,5,4,0,5,5,5,4,0,5,4,4,3,2,3,2,3,2,0,0,0,0,6,5,6,5,0,0,2,5,0,5,4,3,2,3,3,0,0,0,7,4,0,5,0,0,0,0,4,5,4,5,4,3,2,5,4,3,2,5,4,3,2,3,2,3,2,1,8,9,10,8,8,10,8,9,8,9,11,10,8,9,10,12,0,0,0,0,0,0,13,0,0,13,13,13,13,13,0,14,0,13,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,15,15,15,15,15,15,0,13,13,13,13,13,13,13,0,0,14,14,16,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,17,17,17,17,0,17,18,17,18,17,18,17,18,0,18,18,17,17,18,17,18,18,17,17,18,0,18,18,0,18,0,18,0,18,0,18,17,18,17,17,17,17,18,17,18,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,21,19,22,23,20,21,19,22,23,0,20,20,19,22,23,20,21,23,20,21,23,0,22,23,0,20,20,21,20,21,19,22,19,22,0,23,0,23,19,22,0,20,19,23,0,23,20,21,19,22,23,20,20,21,19,22,23,21,0,22,21,19,19,19,22,20,21,19,22,23,21,19,20,19,22,0,19,22,0,20,20,0,0,19,22,20,21,19,22,20,21,23,19,22,20,21,19,22,23,20,21,19,22,23,22,20,21,19,22,23,22,21,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,25,26,27,25,26,27,25,26,27,25,26,27,0,26,27,26,27,25,26,27,25,25,25,26,27,25,26,27,0,25,26,27,25,26,27,25,26,27,25,26,27,25,25,0,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,33,32,33,32,33,32,33,0,32,33,32,33,32,33,32,33,32,33,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,0,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,0,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,35,36,37,38,39,40,41,42,43,44,45,46,0,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,48,49,50,48,51,52,49,50,48,51,52,0,49,49,48,51,52,49,50,52,49,50,52,0,51,52,0,49,49,50,52,49,50,48,51,48,51,0,52,0,52,48,51,0,52,0,52,0,49,50,48,51,52,49,49,50,48,51,52,50,0,51,50,48,48,48,49,50,48,51,52,50,49,48,51,0,48,51,0,0,48,0,48,51,49,50,48,51,49,50,52,48,51,49,50,48,51,52,49,50,48,51,52,51,49,50,48,51,52,51,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,54,55,56,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,54,55,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,0,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,61,62,61,62,61,62,61,62,0,61,62,61,62,61,62,61,62,61,62,61,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,0,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,0,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,64,65,66,67,68,69,70,71,72,73,74,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,0,0,0,0,0,77,78,77,78,77,77,77,77,78,77,77,78,77,77,77,78,78,78,0,77,78,77,77,78,77,78,0,77,78,78,78,77,78,77,78,77,78,77,78,77,78,0,0,0,0,0,0,0,0,0,0,0,79,79,0,79,0,0,79,79,79,79,0,79,79,79,0,0,0,0,0,0,0,0,80,81,82,83,84,82,81,80,85,86,83,84,82,81,80,85,86,0,83,83,82,81,85,86,83,84,86,83,84,86,0,82,80,85,86,0,83,83,84,83,84,82,81,80,85,82,81,80,85,0,86,0,86,82,81,80,85,83,83,83,83,86,0,86,83,84,82,81,80,85,86,83,83,84,82,81,80,85,86,84,0,83,83,83,85,84,82,82,82,85,83,84,82,81,80,85,86,84,83,82,81,80,85,0,83,83,83,82,81,80,85,0,83,83,0,0,82,81,80,85,83,84,82,81,80,85,83,84,86,82,81,80,85,83,84,82,81,80,85,86,83,84,82,81,80,85,86,85,83,84,82,81,80,85,86,85,84,86,0,87,87,87,87,87,87,87,87,87,87,87,0,0,0,88,89,90,88,89,90,88,89,90,88,89,90,88,89,88,89,90,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,88,89,90,90,0,91,91,91,91,91,91,91,91,91,91,91,0,92,92,92,92,92,92,92,92,92,92,92,92,0,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,0,96,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,0,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,0,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,97,98,99,100,101,102,103,104,105,106,107,108,0,109,109,109,109,109,109,109,109,109,109,109,0,0,0,110,0,0,0,111,110,110,0,110,0,0,0,0,0,110,0,111,110,0,0,0,110,0,111,0,0,0,110,0,110,112,112,112,112,112,112,112,112,113,112,113,114,115,116,0,114,115,116,113,112,113,112,117,112,112,0,112,112,113,118,112,112,112,119,0,113,112,117,120,112,0,121,112,112,0,112,112,0,114,115,116,118,122,112,112,112,112,112,112,123,124,112,113,112,112,0,112,112,112,112,112,112,112,0,112,112,112,113,112,113,112,112,112,112,112,112,112,112,112,0,122,118,122,124,121,114,117,125,118,115,116,123,120,0,112,112,113,113,0,112,116,112,117,113,126,0,112,112,120,112,112,112,114,116,113,112,113,112,113,112,117,120,113,112,0,112,112,118,124,127,128,129,130,131,132,129,130,131,132,129,130,133,134,135,136,137,138,139,0,0,140,141,0,141,141,0,141,141,0,0,0,141,0,141,141,141,0,141,133,134,135,136,137,138,140,139,141,133,134,135,136,137,138,140,139,135,141,133,134,135,136,137,138,140,139,141,133,134,135,136,137,138,140,139,136,133,136,133,134,135,136,137,138,139,141,133,134,135,136,137,138,140,139,141,133,134,135,136,137,138,140,139,139,137,138,134,137,138,141,133,134,135,136,137,138,140,139,141,133,134,135,136,137,138,140,139,139,141,141,0,0,136,141,133,134,135,136,137,138,140,139,141,141,133,133,133,134,134,134,135,135,135,136,136,136,137,137,138,138,138,140,140,139,139,139,141,133,134,135,136,137,138,140,139,141,133,134,135,136,137,138,140,139,142,143,144,145,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,124,146,124,146,124,146,124,146,124,146,146,146,124,124,146,124,146,146,124,146,124,146,124,124,146,124,146,124,146,124,146,124,146,124,146,124,124,146,124,124,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,148,147,148,149,147,148,149,147,148,149,147,148,149,148,147,147,147,148,149,147,147,147,148,149,149,147,147,148,149,148,149,148,149,147,148,148,147,148,149,147,148,149,147,148,149,149,149,147,148,149,150,0,0,114,114,114,114,117,114,117,117,117,114,117,114,117,117,117,117,114,114,114,114,117,114,114,117,117,114,114,117,114,117,117,114,117,114,117,117,114,114,114,114,114,114,117,114,117,114,117,117,117,114,117,110,111,110,110,110,110,111,110,0,110,111,0,110,110,110,111,110,111,110,111,110,111,0,110,111,110,111,110,111,110,111,110,111,110,111,110,111,110,111,127,128,129,130,131,132,129,130,131,132,129,130,0,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,118,115,116,115,116,115,116,118,115,116,118,115,116,118,115,116,118,115,116,118,118,118,115,115,116,118,115,116,115,116,118,118,118,115,116,118,115,116,116,115,116,118,118,115,116,118,115,116,115,118,118,115,116,118,118,118,115,116,118,115,116,118,116,118,116,116,116,115,116,115,116,115,116,118,115,116,118,115,116,118,115,116,118,118,115,116,118,118,0,0,123,120,123,120,123,120,123,120,123,120,120,120,123,123,123,120,123,123,120,120,123,120,123,120,123,120,123,120,123,120,120,123,120,123,120,123,120,123,120,120,123,120,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,0,151,151,151,151,151,152,152,152,152,151,152,151,152,151,151,151,151,151,152,151,151,151,0,151,152,151,152,152,151,151,152,152,151,151,151,152,0,151,151,152,151,152,152,151,152,153,154,155,156,157,158,159,160,160,161,162,162,161,163,0,164,0,0,165,0,0,0,0,0,0,0,166,166,166,0,0,0,0,0,0,0,166,166,166,166,0,166,166,166,166,166,166,0,167,167,167,167,167,167,0,167,167,167,167,167,167,167,167,167,167,167,167,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["emptybindinggeneratorconfig",3]],["emptybindinggeneratorconfig",3]],[[["config",3]],["config",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["emptybindinggeneratorconfig",3],["emptybindinggeneratorconfig",3]],["ordering",4]],null,[[],["config",3]],[[],["result",6,[["emptybindinggeneratorconfig",3]]]],[[],["result",4,[["config",3]]]],[[["utf8path",3]],["result",6,[["string",3]]]],[[["emptybindinggeneratorconfig",3],["emptybindinggeneratorconfig",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["emptybindinggeneratorconfig",3],["formatter",3]],["result",6]],[[["config",3],["formatter",3]],["result",6]],[[["utf8path",3]],["result",6]],[[]],[[]],[[["componentinterface",3]],["config",3]],[[]],[[]],[[["argmatches",3]],["result",4,[["cli",3],["error",3]]]],[[["argmatches",3]],["result",4,[["commands",4],["error",3]]]],[[["argmatches",3]],["result",4,[["cli",3],["error",3]]]],[[["argmatches",3]],["result",4,[["commands",4],["error",3]]]],[[["utf8path",3],["option",4,[["utf8path",3]]],["vec",3,[["str",0]]],["option",4,[["utf8path",3]]],["option",4,[["utf8path",3]]],["bool",0]],["result",6]],[[["utf8path",3],["option",4,[["utf8path",3]]],["option",4,[["utf8path",3]]],["bool",0]],["result",6]],[[["bindinggenerator",8],["asref",8,[["utf8path",3]]],["option",4,[["asref",8,[["utf8path",3]]]]],["option",4,[["asref",8,[["utf8path",3]]]]]],["result",6]],[[["componentinterface",3],["utf8path",3],["option",4,[["utf8path",3]]]],["result",6,[["config",3]]]],[[["componentinterface",3]],["vec",3]],[[["componentinterface",3]],["vec",3]],[[["value",4]],["option",4,[["value",4]]]],[[["value",4]],["option",4,[["value",4]]]],[[["utf8path",3],["option",4,[["utf8path",3]]]],["result",6,[["utf8pathbuf",3]]]],[[["utf8path",3]],["result",6,[["utf8path",3]]]],[[["str",0]],["bool",0]],[[["emptybindinggeneratorconfig",3],["",0]]],null,[[]],[[]],[[]],[[]],[[],["command",6]],[[],["command",6]],[[["componentinterface",3],["utf8path",3],["option",4,[["utf8path",3]]]],["result",6,[["bindinggeneratorconfig",8]]]],[[["utf8path",3],["option",4,[["utf8path",3]]]],["result",6,[["option",4,[["value",4]]]]]],null,[[["",0],["",0]]],[[["config",3],["config",3]],["config",3]],[[["utf8path",3]],["result",6,[["componentinterface",3]]]],[[["emptybindinggeneratorconfig",3],["emptybindinggeneratorconfig",3]],["option",4,[["ordering",4]]]],[[["utf8path",3]],["result",6]],[[],["result",6]],[[["asref",8,[["utf8path",3]]],["option",4,[["utf8path",3]]]],["result",6]],null,[[["config",3]],["result",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["cli",3],["argmatches",3]],["result",4,[["error",3]]]],[[["commands",4],["argmatches",3]],["result",4,[["error",3]]]],[[["cli",3],["argmatches",3]],["result",4,[["error",3]]]],[[["commands",4],["argmatches",3]],["result",4,[["error",3]]]],[[["",0],["componentinterface",3],["utf8path",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["str",0]],["string",3]],null,null,[[["",0],["str",0]],["string",3]],[[["",0],["str",0]],["string",3]],[[["",0],["ffitype",4]],["string",3]],[[["",0],["typeidentifier",6]],["box",3,[["codetype",8]]]],[[["",0],["str",0]],["string",3]],null,[[["",0],["codeoracle",8]],["string",3]],null,[[["",0],["str",0]],["string",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["templateexpression",3]],["templateexpression",3]],[[["",0],["",0]]],[[],["templateexpression",3]],[[],["result",4,[["templateexpression",3]]]],[[["templateexpression",3],["formatter",3]],["result",6]],[[]],[[]],[[["templateexpression",3],["str",0]],["string",3]],[[["templateexpression",3]],["result",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["codeoracle",8]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],null,[[["",0],["str",0]],["string",3]],[[["",0],["str",0]],["string",3]],[[["",0],["str",0]],["string",3]],[[["",0],["ffitype",4]],["string",3]],[[["",0],["typeidentifier",6]],["box",3,[["codetype",8]]]],[[["",0],["str",0]],["string",3]],[[["",0],["str",0]],["string",3]],null,null,[[["",0],["codeoracle",8]],["string",3]],[[["",0],["codeoracle",8]],["string",3]],[[["",0],["codeoracle",8]],["box",3,[["codetype",8]]]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8]],["string",3]],[[["",0],["codeoracle",8]],["string",3]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["codeoracle",8]],["option",4,[["vec",3,[["string",3]]]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8]],["option",4,[["string",3]]]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["literal",6]],["string",3]],[[["",0],["codeoracle",8],["literal",6]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0]],["string",3]],[[["",0],["codeoracle",8]],["string",3]],[[["",0],["codeoracle",8],["str",0],["str",0]],["string",3]],[[["",0],["codeoracle",8],["str",0],["str",0]],["string",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["targetlanguage",4]],["targetlanguage",4]],[[["config",3]],["config",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["config",3],["componentinterface",3],["utf8path",3],["targetlanguage",4]],["result",6]],[[],["config",3]],[[],["result",4,[["config",3]]]],[[["targetlanguage",4],["targetlanguage",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["config",3],["formatter",3]],["result",6]],[[]],[[]],[[["componentinterface",3]],["config",3]],[[["targetlanguage",4],["",0]]],[[]],[[]],null,null,[[["config",3],["config",3]],["config",3]],null,null,null,null,[[["utf8path",3],["utf8path",3],["targetlanguage",4]],["result",6]],[[["config",3]],["result",4]],null,null,[[["",0]]],[[["",0]]],[[["string",3]],["result",6,[["targetlanguage",4]]]],[[["osstr",3]],["result",6,[["targetlanguage",4]]]],[[["str",0]],["result",6,[["targetlanguage",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["config",3],["componentinterface",3],["utf8path",3],["targetlanguage",4],["bool",0]],["result",6]],null,[[["utf8path",3]],["result",6,[["osstring",3]]]],[[["config",3],["componentinterface",3],["utf8path",3]],["result",6]],[[["config",3],["utf8path",3]],["utf8pathbuf",3]],null,null,[[["utf8path",3],["utf8path",3]],["result",6]],[[["config",3],["componentinterface",3],["utf8path",3],["bool",0]],["result",6]],null,null,null,null,null,[[["typerenderer",3],["str",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["config",3]],["string",3]],null,null,null,[[["kotlincodeoracle",3],["str",0]],["string",3]],[[["config",3]],["config",3]],[[["customtypeconfig",3]],["customtypeconfig",3]],[[["kotlincodeoracle",3]],["kotlincodeoracle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["kotlincodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],null,null,[[],["config",3]],[[],["customtypeconfig",3]],[[],["result",4,[["config",3]]]],[[],["result",4,[["customtypeconfig",3]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],null,[[["kotlincodeoracle",3],["str",0]],["string",3]],null,[[["kotlincodeoracle",3],["str",0]],["string",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],null,null,[[["typerenderer",3],["str",0]],["string",3]],[[["kotlincodeoracle",3],["ffitype",4]],["string",3]],null,[[["kotlincodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],[[["config",3],["formatter",3]],["result",6]],[[["customtypeconfig",3],["formatter",3]],["result",6]],[[["typerenderer",3],["formatter",3]],["result",6]],[[["kotlinwrapper",3],["formatter",3]],["result",6]],[[["kotlincodeoracle",3],["str",0]],["string",3]],[[["componentinterface",3]],["config",3]],[[]],[[]],[[]],[[]],[[]],null,[[["config",3],["componentinterface",3]],["result",6,[["string",3]]]],[[["kotlinwrapper",3]],["vec",3,[["string",3]]]],null,null,[[["typerenderer",3],["str",0]],["bool",0]],null,[[["kotlinwrapper",3]],["vec",3,[["string",3]]]],[[]],[[]],[[]],[[]],[[]],null,null,[[["config",3],["config",3]],["config",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,[[["config",3],["componentinterface",3]],["typerenderer",3]],[[["config",3],["componentinterface",3]],["kotlinwrapper",3]],null,[[["config",3]],["string",3]],null,null,null,[[["typerenderer",3]],["result",6]],[[["kotlinwrapper",3]],["result",6]],[[["config",3]],["result",4]],[[["customtypeconfig",3]],["result",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["kotlincodeoracle",3],["str",0]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[["callbackinterfacecodetype",3],["codeoracle",8]],["option",4,[["string",3]]]],[[]],[[["callbackinterfacecodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["callbackinterfacecodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],[[]],null,[[["optionalcodetype",3]],["typeidentifier",6]],[[["sequencecodetype",3]],["typeidentifier",6]],null,null,[[]],[[]],[[]],[[["mapcodetype",3]],["typeidentifier",6]],null,[[["mapcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["optionalcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["sequencecodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["typeidentifier",6],["typeidentifier",6]],["mapcodetype",3]],[[["typeidentifier",6]],["optionalcodetype",3]],[[["typeidentifier",6]],["sequencecodetype",3]],[[["codeoracle",8],["literal",6],["typeidentifier",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[["mapcodetype",3]],["typeidentifier",6]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["customcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],[[["customcodetype",3],["codeoracle",8],["literal",6]],["string",3]],null,[[["string",3]],["customcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["customcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["enumcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["enumcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["errorcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["errorcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["externalcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],[[["externalcodetype",3],["codeoracle",8],["literal",6]],["string",3]],null,[[["string",3]],["externalcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["externalcodetype",3],["codeoracle",8]],["string",3]],[[],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[],["kotlincodeoracle",3]],[[],["result",6,[["string",3],["error",4]]]],[[["literal",4]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],null,[[]],[[]],[[["timestampcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["durationcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["objectcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["objectcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["booleancodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["stringcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["codeoracle",8],["literal",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["booleancodetype",3],["codeoracle",8]],["string",3]],[[["stringcodetype",3],["codeoracle",8]],["string",3]],[[["int8codetype",3],["codeoracle",8]],["string",3]],[[["int16codetype",3],["codeoracle",8]],["string",3]],[[["int32codetype",3],["codeoracle",8]],["string",3]],[[["int64codetype",3],["codeoracle",8]],["string",3]],[[["uint8codetype",3],["codeoracle",8]],["string",3]],[[["uint16codetype",3],["codeoracle",8]],["string",3]],[[["uint32codetype",3],["codeoracle",8]],["string",3]],[[["uint64codetype",3],["codeoracle",8]],["string",3]],[[["float32codetype",3],["codeoracle",8]],["string",3]],[[["float64codetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["recordcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["recordcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],null,null,null,[[["utf8path",3],["utf8path",3]],["result",6]],[[["config",3],["componentinterface",3],["utf8path",3],["bool",0]],["result",6]],null,null,null,null,null,null,[[["typerenderer",3],["str",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["config",3]],["string",3]],null,null,null,[[["pythoncodeoracle",3],["str",0]],["string",3]],[[["config",3]],["config",3]],[[["customtypeconfig",3]],["customtypeconfig",3]],[[["pythoncodeoracle",3]],["pythoncodeoracle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["pythoncodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],null,null,[[],["config",3]],[[],["customtypeconfig",3]],[[],["pythoncodeoracle",3]],[[],["result",4,[["config",3]]]],[[],["result",4,[["customtypeconfig",3]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],null,[[["pythoncodeoracle",3],["str",0]],["string",3]],null,[[["pythoncodeoracle",3],["str",0]],["string",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],null,[[["pythoncodeoracle",3],["ffitype",4]],["string",3]],null,[[["pythoncodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],[[["string",3]],["string",3]],[[["config",3],["formatter",3]],["result",6]],[[["customtypeconfig",3],["formatter",3]],["result",6]],[[["typerenderer",3],["formatter",3]],["result",6]],[[["pythonwrapper",3],["formatter",3]],["result",6]],[[["pythoncodeoracle",3],["str",0]],["string",3]],[[["componentinterface",3]],["config",3]],[[]],[[]],[[]],[[]],[[]],null,[[["config",3],["componentinterface",3]],["result",6,[["string",3]]]],[[["pythonwrapper",3]],["vec",3,[["string",3]]]],null,null,[[["typerenderer",3],["str",0]],["bool",0]],null,[[]],[[]],[[]],[[]],[[]],null,[[["config",3],["config",3]],["config",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,[[["config",3],["componentinterface",3]],["typerenderer",3]],[[["config",3],["componentinterface",3]],["pythonwrapper",3]],null,null,null,null,[[["typerenderer",3]],["result",6]],[[["pythonwrapper",3]],["result",6]],[[["config",3]],["result",4]],[[["customtypeconfig",3]],["result",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["pythoncodeoracle",3],["str",0]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],[[["callbackinterfacecodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],null,[[]],[[["callbackinterfacecodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["callbackinterfacecodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],[[["optionalcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[["sequencecodetype",3],["codeoracle",8],["str",0]],["string",3]],[[["mapcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,[[["optionalcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["sequencecodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["mapcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["typeidentifier",6]],["optionalcodetype",3]],[[["typeidentifier",6]],["sequencecodetype",3]],[[["typeidentifier",6],["typeidentifier",6]],["mapcodetype",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["customcodetype",3],["codeoracle",8]],["string",3]],[[["customcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],[[]],null,[[["string",3]],["customcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["customcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],[[["enumcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],null,[[]],[[["enumcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["enumcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],[[["errorcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],null,[[]],[[["errorcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["errorcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["externalcodetype",3],["codeoracle",8]],["string",3]],[[["externalcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],[[]],null,[[["string",3]],["externalcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["externalcodetype",3],["codeoracle",8]],["string",3]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0],["type",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["literal",4]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[],["pythoncodeoracle",3]],[[],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],[[["timestampcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[["durationcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],[[]],null,[[]],[[]],[[["timestampcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["durationcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],[[["objectcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],null,[[]],[[["objectcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["objectcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["booleancodetype",3],["codeoracle",8],["str",0]],["string",3]],[[["stringcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[["int8codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["int16codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["int32codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["int64codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["uint8codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["uint16codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["uint32codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["uint64codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["float32codetype",3],["codeoracle",8],["str",0]],["string",3]],[[["float64codetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["booleancodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["stringcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["codeoracle",8],["literal",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["booleancodetype",3],["codeoracle",8]],["string",3]],[[["stringcodetype",3],["codeoracle",8]],["string",3]],[[["int8codetype",3],["codeoracle",8]],["string",3]],[[["int16codetype",3],["codeoracle",8]],["string",3]],[[["int32codetype",3],["codeoracle",8]],["string",3]],[[["int64codetype",3],["codeoracle",8]],["string",3]],[[["uint8codetype",3],["codeoracle",8]],["string",3]],[[["uint16codetype",3],["codeoracle",8]],["string",3]],[[["uint32codetype",3],["codeoracle",8]],["string",3]],[[["uint64codetype",3],["codeoracle",8]],["string",3]],[[["float32codetype",3],["codeoracle",8]],["string",3]],[[["float64codetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],[[["recordcodetype",3],["codeoracle",8],["str",0]],["string",3]],[[]],null,[[]],[[["recordcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["recordcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],null,null,null,[[["config",3],["componentinterface",3]],["result",6,[["string",3]]]],[[["utf8path",3],["utf8path",3]],["result",6]],[[["config",3],["componentinterface",3],["utf8path",3],["bool",0]],["result",6]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["config",3]],["string",3]],null,[[["config",3]],["string",3]],null,null,[[["config",3]],["config",3]],[[["",0],["",0]]],null,[[["config",3]],["bool",0]],[[],["config",3]],[[],["result",4,[["config",3]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0]],["option",4,[["str",0]]]],null,[[["config",3],["formatter",3]],["result",6]],[[["rubywrapper",3],["formatter",3]],["result",6]],[[["componentinterface",3]],["config",3]],[[]],[[]],[[]],[[]],[[["str",0]],["bool",0]],[[["config",3],["config",3]],["config",3]],[[["",0]],["str",0]],[[["config",3],["componentinterface",3]],["rubywrapper",3]],[[["rubywrapper",3]],["result",6]],[[["config",3]],["result",4]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0],["type",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0],["type",4]],["result",6,[["string",3],["error",4]]]],[[["literal",4]],["result",6,[["string",3],["error",4]]]],[[["str",0],["type",4]],["result",6,[["string",3],["error",4]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["config",3],["componentinterface",3],["utf8path",3]],["result",6]],[[]],null,null,null,[[]],null,null,[[["utf8path",3],["utf8path",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["config",3],["componentinterface",3],["utf8path",3],["bool",0]],["result",6]],null,null,null,null,null,null,null,null,null,[[["typerenderer",3],["str",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["config",3]],["string",3]],null,null,null,null,[[["swiftcodeoracle",3],["str",0]],["string",3]],[[["config",3]],["config",3]],[[["customtypeconfig",3]],["customtypeconfig",3]],[[["swiftcodeoracle",3]],["swiftcodeoracle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["swiftcodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],null,null,[[],["config",3]],[[],["customtypeconfig",3]],[[],["result",4,[["config",3]]]],[[],["result",4,[["customtypeconfig",3]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],null,[[["swiftcodeoracle",3],["str",0]],["string",3]],null,[[["swiftcodeoracle",3],["str",0]],["string",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],[[["config",3]],["string",3]],null,[[["config",3]],["string",3]],null,[[["swiftcodeoracle",3],["ffitype",4]],["string",3]],null,[[["swiftcodeoracle",3],["typeidentifier",6]],["box",3,[["codetype",8]]]],[[["config",3],["formatter",3]],["result",6]],[[["customtypeconfig",3],["formatter",3]],["result",6]],[[["typerenderer",3],["formatter",3]],["result",6]],[[["bridgingheader",3],["formatter",3]],["result",6]],[[["modulemap",3],["formatter",3]],["result",6]],[[["swiftwrapper",3],["formatter",3]],["result",6]],[[["swiftcodeoracle",3],["str",0]],["string",3]],[[]],[[["componentinterface",3]],["config",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["config",3],["componentinterface",3]],["result",6,[["bindings",3]]]],[[["config",3]],["bool",0]],null,[[["config",3]],["string",3]],[[["swiftwrapper",3]],["vec",3,[["string",3]]]],null,null,[[["typerenderer",3],["str",0]],["bool",0]],null,[[["swiftwrapper",3]],["vec",3,[["string",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["config",3],["config",3]],["config",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,[[["config",3]],["string",3]],null,[[["config",3]],["string",3]],[[["config",3],["componentinterface",3]],["typerenderer",3]],[[["config",3],["componentinterface",3]],["bridgingheader",3]],[[["config",3],["componentinterface",3]],["modulemap",3]],[[["config",3],["componentinterface",3]],["swiftwrapper",3]],null,[[["config",3]],["bool",0]],null,null,null,[[["typerenderer",3]],["result",6]],[[["bridgingheader",3]],["result",6]],[[["modulemap",3]],["result",6]],[[["swiftwrapper",3]],["result",6]],[[["config",3]],["result",4]],[[["customtypeconfig",3]],["result",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["swiftcodeoracle",3],["str",0]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["string",3]],["callbackinterfacecodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["callbackinterfacecodetype",3],["codeoracle",8]],["string",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,[[["optionalcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["sequencecodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["mapcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["typeidentifier",6]],["optionalcodetype",3]],[[["typeidentifier",6]],["sequencecodetype",3]],[[["typeidentifier",6],["typeidentifier",6]],["mapcodetype",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["optionalcodetype",3],["codeoracle",8]],["string",3]],[[["sequencecodetype",3],["codeoracle",8]],["string",3]],[[["mapcodetype",3],["codeoracle",8]],["string",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["customcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],null,[[["string",3]],["customcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["customcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["enumcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["string",3]],["enumcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["enumcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["string",3]],["errorcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["errorcodetype",3],["codeoracle",8]],["string",3]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["literal",4]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[],["swiftcodeoracle",3]],[[],["result",6,[["string",3],["error",4]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],[[["str",0]],["result",6,[["string",3],["error",4]]]],[[],["result",6,[["string",3],["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["timestampcodetype",3],["codeoracle",8]],["string",3]],[[["durationcodetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["string",3]],["objectcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["objectcodetype",3],["codeoracle",8]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["booleancodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["stringcodetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["int64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint8codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint16codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["uint64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float32codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["float64codetype",3],["codeoracle",8],["literal",6]],["string",3]],[[["codeoracle",8],["literal",6]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["booleancodetype",3],["codeoracle",8]],["string",3]],[[["stringcodetype",3],["codeoracle",8]],["string",3]],[[["int8codetype",3],["codeoracle",8]],["string",3]],[[["int16codetype",3],["codeoracle",8]],["string",3]],[[["int32codetype",3],["codeoracle",8]],["string",3]],[[["int64codetype",3],["codeoracle",8]],["string",3]],[[["uint8codetype",3],["codeoracle",8]],["string",3]],[[["uint16codetype",3],["codeoracle",8]],["string",3]],[[["uint32codetype",3],["codeoracle",8]],["string",3]],[[["uint64codetype",3],["codeoracle",8]],["string",3]],[[["float32codetype",3],["codeoracle",8]],["string",3]],[[["float64codetype",3],["codeoracle",8]],["string",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],[[]],null,[[]],[[["string",3]],["recordcodetype",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["recordcodetype",3],["codeoracle",8]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["componentinterface",3],["callbackinterface",3]]],[[["componentinterface",3],["enum",3]]],[[["componentinterface",3],["error",3]]],[[["componentinterface",3],["function",3]],["result",6]],[[["componentinterface",3],["methodmetadata",3]]],[[["componentinterface",3],["namespace",3]],["result",6]],[[["componentinterface",3],["object",3]]],[[["componentinterface",3],["objectmetadata",3]]],[[["recursivetypeiterator",3],["type",4]]],[[["componentinterface",3],["record",3]]],[[["recursivetypeiterator",3]],["option",4,[["type",4]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["componentinterface",3]]],null,null,[[["componentinterface",3]],["result",6]],[[["componentinterface",3]],["u16",0]],null,null,[[["componentinterface",3]],["bool",0]],[[["componentinterface",3]],["bool",0]],[[["componentinterface",3]],["bool",0]],[[["",0],["componentinterface",3]],["result",6]],[[["type",4]],["type",4]],null,[[],["componentinterface",3]],null,null,[[["componentinterface",3]],["result",6]],null,null,[[["componentinterface",3]]],null,null,[[["componentinterface",3]]],null,null,null,null,null,null,null,[[["componentinterface",3]],["str",0]],null,[[["componentinterface",3]],["ffifunction",3]],[[["componentinterface",3]],["ffifunction",3]],[[["componentinterface",3]],["ffifunction",3]],[[["componentinterface",3]],["ffifunction",3]],null,null,[[["componentinterface",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["result",6,[["componentinterface",3]]]],null,[[["componentinterface",3]]],null,[[["componentinterface",3],["str",0]],["option",4,[["callbackinterface",3]]]],[[["componentinterface",3],["str",0]],["option",4,[["enum",3]]]],[[["componentinterface",3],["str",0]],["option",4,[["error",3]]]],[[["componentinterface",3],["str",0]],["option",4,[["function",3]]]],[[["componentinterface",3],["str",0]],["option",4,[["object",3]]]],[[["vec",3],["str",0]],["object",3]],[[["componentinterface",3],["str",0]],["option",4,[["record",3]]]],[[["componentinterface",3],["str",0]],["option",4,[["type",4]]]],[[["componentinterface",3],["",0]]],[[]],[[]],[[]],[[["componentinterface",3],["type",4]],["bool",0]],[[["componentinterface",3],["type",4]],["bool",0]],[[["componentinterface",3]],["iterator",8]],[[["componentinterface",3]],["iterator",8]],[[["componentinterface",3]],["iterator",8]],[[["componentinterface",3]],["iterator",8]],[[["componentinterface",3]],["iterator",8]],[[["componentinterface",3],["type",4]],["iterator",8]],[[["componentinterface",3]],["iterator",8]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["componentinterface",3]],["str",0]],null,[[["componentinterface",3],["type",4]],["recursivetypeiterator",3]],[[["recursivetypeiterator",3]],["option",4]],null,[[["componentinterface",3]]],null,null,null,null,[[["",0],["componentinterface",3]],["result",6]],null,[[["componentinterface",3]]],null,null,[[["componentinterface",3],["returntype",4]],["result",6,[["option",4,[["type",4]]]]]],[[["componentinterface",3],["typeresolver",8]],["result",6,[["type",4]]]],[[["componentinterface",3]],["result",6]],null,null,null,[[["componentinterface",3],["error",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["argumentattributes",3]],["bool",0]],[[["attribute",4]],["attribute",4]],[[["enumattributes",3]],["enumattributes",3]],[[["functionattributes",3]],["functionattributes",3]],[[["argumentattributes",3]],["argumentattributes",3]],[[["interfaceattributes",3]],["interfaceattributes",3]],[[["constructorattributes",3]],["constructorattributes",3]],[[["methodattributes",3]],["methodattributes",3]],[[["selftype",4]],["selftype",4]],[[["typedefattributes",3]],["typedefattributes",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["interfaceattributes",3]],["bool",0]],[[["enumattributes",3]],["bool",0]],[[["interfaceattributes",3]],["bool",0]],[[],["enumattributes",3]],[[],["functionattributes",3]],[[],["argumentattributes",3]],[[],["interfaceattributes",3]],[[],["constructorattributes",3]],[[],["methodattributes",3]],[[],["typedefattributes",3]],[[["attribute",4],["formatter",3]],["result",6]],[[["enumattributes",3],["formatter",3]],["result",6]],[[["functionattributes",3],["formatter",3]],["result",6]],[[["argumentattributes",3],["formatter",3]],["result",6]],[[["interfaceattributes",3],["formatter",3]],["result",6]],[[["constructorattributes",3],["formatter",3]],["result",6]],[[["methodattributes",3],["formatter",3]],["result",6]],[[["selftype",4],["formatter",3]],["result",6]],[[["typedefattributes",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typedefattributes",3]],["string",3]],[[["constructorattributes",3]],["option",4,[["str",0]]]],[[["methodattributes",3]],["bool",0]],[[["functionattributes",3]],["option",4,[["str",0]]]],[[["constructorattributes",3]],["option",4,[["str",0]]]],[[["methodattributes",3]],["option",4,[["str",0]]]],[[["attribute",4],["",0]]],[[["enumattributes",3],["",0]]],[[["functionattributes",3],["",0]]],[[["argumentattributes",3],["",0]]],[[["interfaceattributes",3],["",0]]],[[["constructorattributes",3],["",0]]],[[["methodattributes",3],["",0]]],[[["selftype",4],["",0]]],[[["typedefattributes",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typedefattributes",3]],["bool",0]],[[["attribute",4]],["bool",0]],[[["attribute",4]],["bool",0]],[[["identifierorstring",4]],["string",3]],[[["extendedattributelist",6]],["result",6,[["vec",3,[["attribute",4]]]]]],[[["interfaceattributes",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["extendedattribute",4]],["result",6,[["attribute",4],["error",3]]]],[[],["result",4]],[[["extendedattributelist",6]],["result",6,[["enumattributes",3]]]],[[["option",4,[["tryinto",8,[["enumattributes",3]]]]]],["result",6,[["enumattributes",3]]]],[[],["result",4]],[[],["result",4]],[[["extendedattributelist",6]],["result",6,[["functionattributes",3]]]],[[["option",4,[["tryinto",8,[["functionattributes",3]]]]]],["result",6,[["functionattributes",3]]]],[[["option",4,[["tryinto",8,[["argumentattributes",3]]]]]],["result",6,[["argumentattributes",3]]]],[[["extendedattributelist",6]],["result",6,[["argumentattributes",3]]]],[[],["result",4]],[[],["result",4]],[[["extendedattributelist",6]],["result",6,[["interfaceattributes",3]]]],[[["option",4,[["tryinto",8,[["interfaceattributes",3]]]]]],["result",6,[["interfaceattributes",3]]]],[[],["result",4]],[[["extendedattributelist",6]],["result",6,[["constructorattributes",3]]]],[[],["result",4]],[[["option",4,[["tryinto",8,[["methodattributes",3]]]]]],["result",6,[["methodattributes",3]]]],[[["extendedattributelist",6]],["result",6,[["methodattributes",3]]]],[[],["result",4]],[[["identifierorstring",4]],["result",6,[["selftype",4]]]],[[["option",4,[["tryinto",8,[["typedefattributes",3]]]]]],["result",6,[["typedefattributes",3]]]],[[["extendedattributelist",6]],["result",6,[["typedefattributes",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["callbackinterface",3]],["callbackinterface",3]],[[["",0],["",0]]],[[["callbackinterface",3],["codeoracle",8]],["box",3,[["codetype",8]]]],[[["callbackinterface",3],["str",0]]],[[["callbackinterface",3]],["ffifunction",3]],null,[[["callbackinterface",3],["formatter",3]],["result",6]],[[]],[[["callbackinterface",3],["",0]]],[[]],[[["callbackinterface",3]],["typeiterator",6]],[[["callbackinterface",3]],["vec",3,[["method",3]]]],null,[[["callbackinterface",3]],["str",0]],null,[[["string",3]],["callbackinterface",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["callbackinterface",3]],["type",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["enum",3]],["enum",3]],[[["variant",3]],["variant",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["enum",3],["codeoracle",8]],["box",3,[["codetype",8]]]],[[],["variant",3]],[[["variant",3]],["vec",3,[["field",3]]]],null,null,[[["enum",3],["formatter",3]],["result",6]],[[["variant",3],["formatter",3]],["result",6]],[[]],[[]],[[["variant",3]],["bool",0]],[[["enum",3],["",0]]],[[["variant",3],["",0]]],[[]],[[]],[[["enum",3]],["bool",0]],[[["enum",3]],["typeiterator",6]],[[["variant",3]],["typeiterator",6]],[[["enum",3]],["str",0]],[[["variant",3]],["str",0]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["enum",3]],["type",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["enum",3]],["vec",3,[["variant",3]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["error",3],["codeoracle",8]],["box",3,[["codetype",8]]]],null,[[["error",3],["formatter",3]],["result",6]],[[]],[[["enum",3]],["error",3]],[[["error",3],["",0]]],[[]],[[["error",3]],["bool",0]],[[["error",3]],["typeiterator",6]],[[["error",3]],["str",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["error",3]],["type",4]],[[["",0]],["typeid",3]],[[["error",3]],["vec",3,[["variant",3]]]],[[["error",3]],["enum",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ffifunction",3]],["vec",3,[["ffiargument",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ffitype",4]],["ffitype",4]],[[["ffifunction",3]],["ffifunction",3]],[[["ffiargument",3]],["ffiargument",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["ffifunction",3]],[[["ffitype",4],["ffitype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["ffitype",4],["formatter",3]],["result",6]],[[["ffifunction",3],["formatter",3]],["result",6]],[[["ffiargument",3],["formatter",3]],["result",6]],[[]],[[["type",4]],["ffitype",4]],[[["type",4]],["ffitype",4]],[[]],[[]],[[["argument",3]],["ffiargument",3]],[[["ffitype",4],["",0]]],[[]],[[]],[[]],[[["ffifunction",3]],["str",0]],[[["ffiargument",3]],["str",0]],null,null,[[["ffitype",4],["ffitype",4]],["bool",0]],[[["ffifunction",3]],["option",4,[["ffitype",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["ffiargument",3]],["ffitype",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["function",3]],["vec",3,[["argument",3]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["argument",3]],["bool",0]],null,[[["function",3]],["function",3]],[[["argument",3]],["argument",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["argument",3],["codeoracle",8]],["box",3,[["codetype",8]]]],null,[[["argument",3]],["option",4,[["literal",4]]]],[[["function",3],["str",0]],["result",6]],[[["function",3]],["ffifunction",3]],null,[[["function",3],["formatter",3]],["result",6]],[[["argument",3],["formatter",3]],["result",6]],[[]],[[["fnmetadata",3]],["function",3]],[[]],[[["fnparammetadata",3]],["argument",3]],[[["function",3]],["vec",3,[["argument",3]]]],[[["function",3],["",0]]],[[["argument",3],["",0]]],[[]],[[]],[[["argument",3]],["typeiterator",6]],[[["function",3]],["str",0]],[[["argument",3]],["str",0]],null,null,null,[[["function",3]],["option",4,[["type",4]]]],null,[[["function",3]],["bool",0]],[[["function",3]],["option",4,[["str",0]]]],[[["function",3]],["option",4,[["type",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["argument",3]],["type",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["literal",4]],["literal",4]],[[["radix",4]],["radix",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["defaultvalue",4],["type",4]],["result",6,[["literal",4]]]],[[["literal",4],["formatter",3]],["result",6]],[[["radix",4],["formatter",3]],["result",6]],[[]],[[]],[[["literal",4],["",0]]],[[["radix",4],["",0]]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["namespace",3]],["namespace",3]],[[["",0],["",0]]],[[["namespace",3],["formatter",3]],["result",6]],[[]],[[["namespace",3],["",0]]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["object",3]],["vec",3,[["constructor",3]]]],[[["constructor",3]],["vec",3,[["argument",3]]]],[[["method",3]],["vec",3,[["argument",3]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["object",3]],["object",3]],[[["constructor",3]],["constructor",3]],[[["method",3]],["method",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["object",3],["codeoracle",8]],["box",3,[["codetype",8]]]],[[["object",3]],["vec",3,[["constructor",3]]]],null,[[],["constructor",3]],[[["constructor",3],["str",0],["str",0]]],[[["method",3],["str",0],["str",0]],["result",6]],[[["object",3],["str",0]],["result",6]],[[["constructor",3]],["ffifunction",3]],[[["method",3]],["ffifunction",3]],null,null,null,[[["object",3]],["ffifunction",3]],[[["object",3],["formatter",3]],["result",6]],[[["constructor",3],["formatter",3]],["result",6]],[[["method",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["methodmetadata",3]],["method",3]],[[["constructor",3]],["vec",3,[["argument",3]]]],[[["method",3]],["vec",3,[["argument",3]]]],[[["object",3],["str",0]],["method",3]],[[["object",3],["",0]]],[[["constructor",3],["",0]]],[[["method",3],["",0]]],[[]],[[]],[[]],[[["constructor",3]],["bool",0]],[[["object",3]],["iterator",8]],[[["object",3]],["typeiterator",6]],[[["constructor",3]],["typeiterator",6]],[[["method",3]],["typeiterator",6]],[[["object",3]],["vec",3,[["method",3]]]],null,[[["object",3]],["str",0]],[[["constructor",3]],["str",0]],[[["method",3]],["str",0]],null,null,null,[[["string",3]],["object",3]],null,[[["object",3]],["option",4,[["constructor",3]]]],[[["method",3]],["option",4,[["type",4]]]],null,[[["method",3]],["bool",0]],[[["constructor",3]],["bool",0]],[[["method",3]],["bool",0]],[[["constructor",3]],["option",4,[["str",0]]]],[[["method",3]],["option",4,[["str",0]]]],[[["constructor",3]],["option",4,[["type",4]]]],[[["method",3]],["option",4,[["type",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["object",3]],["type",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["object",3]],["bool",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["record",3]],["record",3]],[[["field",3]],["field",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["record",3],["codeoracle",8]],["box",3,[["codetype",8]]]],[[["field",3],["codeoracle",8]],["box",3,[["codetype",8]]]],null,[[["field",3]],["option",4,[["literal",4]]]],[[["record",3]]],null,[[["record",3],["formatter",3]],["result",6]],[[["field",3],["formatter",3]],["result",6]],[[]],[[["recordmetadata",3]],["record",3]],[[["fieldmetadata",3]],["field",3]],[[]],[[["record",3],["",0]]],[[["field",3],["",0]]],[[]],[[]],[[["record",3]],["typeiterator",6]],[[["field",3]],["typeiterator",6]],[[["record",3]],["str",0]],[[["field",3]],["str",0]],null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["record",3]],["type",4]],[[["field",3]],["type",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["typeuniverse",3],["type",4]]],[[["typeuniverse",3],["str",0],["type",4]],["result",6]],[[["typeuniverse",3],["typefinder",8]],["result",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["type",4]],["string",3]],[[["type",4]],["type",4]],[[["",0],["",0]]],[[["type",4],["type",4]],["ordering",4]],[[["type",4],["codeoracle",8]],["box",3,[["codetype",8]]]],[[],["typeuniverse",3]],[[["type",4],["type",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["type",4]],["ffitype",4]],null,[[["type",4],["formatter",3]],["result",6]],[[["typeuniverse",3],["formatter",3]],["result",6]],[[]],[[]],[[["typeuniverse",3],["str",0]],["option",4,[["type",4]]]],[[["type",4],["",0]]],[[]],[[]],[[["typeuniverse",3]],["iterator",8]],[[["type",4]],["typeiterator",6]],[[["type",4],["type",4]],["bool",0]],[[["type",4],["type",4]],["option",4,[["ordering",4]]]],[[["typeuniverse",3],["typeresolver",8]],["result",6,[["type",4]]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["typeuniverse",3]],["result",6]],null,[[["str",0]],["option",4,[["type",4]]]],[[["",0],["typeuniverse",3]],["result",6,[["type",4]]]],[[["componentinterface",3],["vec",3,[["metadata",4]]]],["result",6]],[[["componentinterface",3],["utf8path",3]],["result",6]],null,null,[[["utf8path",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["componentinterface",3],["vec",3,[["metadata",4]]]],["result",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["extracteditems",3]],[[["archive",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[],["result",6,[["vec",3,[["metadata",4]]]]]],[[["elf",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["utf8path",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["mach",4]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["macho",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["pe",3]],["result",6,[["vec",3,[["metadata",4]]]]]],[[["extracteditems",3],["str",0],["usize",0]],["result",6]],[[]],[[]],[[["extracteditems",3]],["vec",3,[["metadata",4]]]],[[["str",0]],["bool",0]],null,null,[[],["extracteditems",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["result",4,[["string",3],["error",4]]]],[[["",0],["write",8]],["result",4,[["error",4]]]],[[["",0]],["option",4,[["str",0]]]],null,[[["rustscaffolding",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["str",0]],[[["componentinterface",3]],["rustscaffolding",3]],[[["rustscaffolding",3]],["result",6]],[[["",0]],["usize",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["str",0]],["result",6,[["string",3],["error",4]]]],[[["type",4]],["result",6,[["string",3],["error",4]]]],[[["type",4]],["result",6,[["string",3]]]],[[["ffitype",4]],["result",6,[["string",3],["error",4]]]],[[["type",4]],["result",6,[["string",3],["error",4]]]]],"p":[[8,"BindingGenerator"],[4,"Commands"],[3,"Cli"],[3,"Config"],[3,"EmptyBindingGeneratorConfig"],[8,"BindingGeneratorConfig"],[8,"MergeWith"],[13,"Generate"],[13,"Scaffolding"],[13,"Test"],[13,"PrintJson"],[3,"TemplateExpression"],[8,"CodeOracle"],[8,"CodeType"],[8,"CodeDeclaration"],[8,"CodeTypeDispatch"],[4,"TargetLanguage"],[3,"Config"],[3,"TypeRenderer"],[3,"Config"],[3,"CustomTypeConfig"],[3,"KotlinWrapper"],[3,"KotlinCodeOracle"],[3,"CallbackInterfaceCodeType"],[3,"MapCodeType"],[3,"OptionalCodeType"],[3,"SequenceCodeType"],[3,"CustomCodeType"],[3,"EnumCodeType"],[3,"ErrorCodeType"],[3,"ExternalCodeType"],[3,"TimestampCodeType"],[3,"DurationCodeType"],[3,"ObjectCodeType"],[3,"BooleanCodeType"],[3,"StringCodeType"],[3,"Int8CodeType"],[3,"Int16CodeType"],[3,"Int32CodeType"],[3,"Int64CodeType"],[3,"UInt8CodeType"],[3,"UInt16CodeType"],[3,"UInt32CodeType"],[3,"UInt64CodeType"],[3,"Float32CodeType"],[3,"Float64CodeType"],[3,"RecordCodeType"],[3,"TypeRenderer"],[3,"Config"],[3,"CustomTypeConfig"],[3,"PythonWrapper"],[3,"PythonCodeOracle"],[3,"CallbackInterfaceCodeType"],[3,"OptionalCodeType"],[3,"SequenceCodeType"],[3,"MapCodeType"],[3,"CustomCodeType"],[3,"EnumCodeType"],[3,"ErrorCodeType"],[3,"ExternalCodeType"],[3,"TimestampCodeType"],[3,"DurationCodeType"],[3,"ObjectCodeType"],[3,"BooleanCodeType"],[3,"StringCodeType"],[3,"Int8CodeType"],[3,"Int16CodeType"],[3,"Int32CodeType"],[3,"Int64CodeType"],[3,"UInt8CodeType"],[3,"UInt16CodeType"],[3,"UInt32CodeType"],[3,"UInt64CodeType"],[3,"Float32CodeType"],[3,"Float64CodeType"],[3,"RecordCodeType"],[3,"Config"],[3,"RubyWrapper"],[3,"Bindings"],[3,"ModuleMap"],[3,"BridgingHeader"],[3,"TypeRenderer"],[3,"Config"],[3,"CustomTypeConfig"],[3,"SwiftWrapper"],[3,"SwiftCodeOracle"],[3,"CallbackInterfaceCodeType"],[3,"OptionalCodeType"],[3,"SequenceCodeType"],[3,"MapCodeType"],[3,"CustomCodeType"],[3,"EnumCodeType"],[3,"ErrorCodeType"],[3,"TimestampCodeType"],[3,"DurationCodeType"],[3,"ObjectCodeType"],[3,"BooleanCodeType"],[3,"StringCodeType"],[3,"Int8CodeType"],[3,"Int16CodeType"],[3,"Int32CodeType"],[3,"Int64CodeType"],[3,"UInt8CodeType"],[3,"UInt16CodeType"],[3,"UInt32CodeType"],[3,"UInt64CodeType"],[3,"Float32CodeType"],[3,"Float64CodeType"],[3,"RecordCodeType"],[4,"Literal"],[4,"Radix"],[3,"ComponentInterface"],[3,"RecursiveTypeIterator"],[3,"Function"],[3,"Constructor"],[3,"Method"],[3,"Argument"],[3,"Object"],[8,"APIConverter"],[3,"Field"],[3,"Error"],[3,"CallbackInterface"],[3,"Record"],[3,"Enum"],[3,"Namespace"],[8,"APIBuilder"],[13,"Boolean"],[13,"String"],[13,"UInt"],[13,"Int"],[13,"Float"],[13,"Enum"],[3,"EnumAttributes"],[3,"FunctionAttributes"],[3,"ArgumentAttributes"],[3,"InterfaceAttributes"],[3,"ConstructorAttributes"],[3,"MethodAttributes"],[3,"TypedefAttributes"],[4,"SelfType"],[4,"Attribute"],[13,"Name"],[13,"SelfType"],[13,"Throws"],[13,"External"],[3,"Variant"],[4,"FFIType"],[3,"FFIFunction"],[3,"FFIArgument"],[13,"RustArcPtr"],[4,"Type"],[3,"TypeUniverse"],[13,"Object"],[13,"Record"],[13,"Enum"],[13,"Error"],[13,"CallbackInterface"],[13,"Optional"],[13,"Sequence"],[13,"Map"],[13,"Custom"],[13,"External"],[13,"Unresolved"],[8,"TypeFinder"],[8,"TypeResolver"],[3,"ExtractedItems"],[3,"RustScaffolding"]]},\
"uniffi_build":{"doc":"","t":[5,5],"n":["generate_scaffolding","run_uniffi_bindgen_scaffolding"],"q":["uniffi_build",""],"d":["Generate the rust “scaffolding” required to build a …",""],"i":[0,0],"f":[[[["asref",8,[["utf8path",3]]]],["result",6]],[[["utf8path",3],["utf8path",3]],["result",6]]],"p":[]},\
"uniffi_macros":{"doc":"Macros for <code>uniffi</code>.","t":[3,24,24,11,11,14,0,23,11,11,14,14,11,0,11,0,5,12,11,11,11,12,0,4,13,13,3,11,11,11,11,5,5,11,11,2,11,11,12,0,12,0,11,11,11,11,11,11,12,12,12,12,0,0,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["FilePaths","Object","Record","borrow","borrow_mut","build_foreign_language_testcases","export","export","fmt","from","generate_and_include_scaffolding","include_scaffolding","into","object","parse","record","should_skip_path","test_scripts","try_from","try_into","type_id","udl_files","util","ExportItem","Function","Impl","Method","borrow","borrow","borrow_mut","borrow_mut","expand_export","fn_type_assertions","from","from","gen_metadata","into","into","item","metadata","metadata","scaffolding","try_from","try_from","try_into","try_into","type_id","type_id","metadata","methods","self_ident","sig","convert","function","gen_metadata","impl_","arg_as_type","convert_bare_type_name","convert_generic_type","convert_generic_type1","convert_generic_type2","convert_type","fn_param_metadata","return_type_metadata","type_as_type_path","type_not_supported","fn_metadata","gen_fn_metadata","gen_impl_metadata","gen_method_metadata","method_metadata","collect_params","gen_ffi_function","gen_fn_scaffolding","gen_method_scaffolding","is_receiver","expand_object","expand_record","create_metadata_static_var","mod_path","rewrite_self_type"],"q":["uniffi_macros","","","","","","","","","","","","","","","","","","","","","","","uniffi_macros::export","","","","","","","","","","","","","","","","","","","","","","","","","uniffi_macros::export::ExportItem","","","","uniffi_macros::export::metadata","","","","uniffi_macros::export::metadata::convert","","","","","","","","","","uniffi_macros::export::metadata::function","","uniffi_macros::export::metadata::impl_","","","uniffi_macros::export::scaffolding","","","","","uniffi_macros::object","uniffi_macros::record","uniffi_macros::util","",""],"d":["Newtype to simplifying parsing a list of file paths from …","","","","","A macro to build testcases for a component’s generated …","","","","Returns the argument unchanged.","A helper macro to generate and include component …","A helper macro to include generated component scaffolding.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rewrite Self type alias usage in an impl block to the type …"],"i":[0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,1,1,1,1,1,0,0,2,2,0,2,3,2,3,0,0,2,3,0,2,3,3,0,3,0,2,3,2,3,2,3,4,5,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["filepaths",3],["formatter",3]],["result",6]],[[]],null,null,[[]],null,[[["parsestream",6]],["result",6,[["filepaths",3]]]],null,[[["utf8path",3]],["bool",0]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["exportitem",4]],["tokenstream",3]],[[["signature",3]],["tokenstream",3]],[[]],[[]],null,[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["item",4]],["result",6,[["exportitem",4]]]],null,[[["genericargument",4]],["result",6,[["type",4]]]],[[["ident",3]],["type",4]],[[["ident",3],["anglebracketedgenericarguments",3]],["result",6,[["type",4]]]],[[["ident",3],["genericargument",4]],["result",6,[["type",4]]]],[[["ident",3],["genericargument",4],["genericargument",4]],["result",6,[["type",4]]]],[[["type",4]],["result",6,[["type",4]]]],[[["punctuated",3]],["result",6,[["vec",3,[["fnparammetadata",3]]]]]],[[["returntype",4]],["result",6,[["option",4,[["type",4]]]]]],[[["type",4]],["result",6,[["typepath",3]]]],[[],["error",3]],[[["signature",3]],["result",6,[["fnmetadata",3]]]],[[["signature",3]],["result",6,[["exportitem",4]]]],[[["itemimpl",3]],["result",6,[["exportitem",4]]]],[[["implitem",4],["str",0]],["result",6,[["method",3]]]],[[["str",0],["implitemmethod",3]],["result",6,[["methodmetadata",3]]]],[[["intoiterator",8],["str",0]],["iterator",8]],[[["signature",3],["ident",3],["tokenstream",3]],["tokenstream",3]],[[["signature",3],["u16",0]],["tokenstream",3]],[[["signature",3],["u16",0],["ident",3]],["tokenstream",3]],[[["fnarg",4]],["bool",0]],[[["deriveinput",3],["vec",3,[["string",3]]]],["tokenstream",3]],[[["deriveinput",3],["vec",3,[["string",3]]]],["tokenstream",3]],[[["ident",3],["metadata",4]],["tokenstream",3]],[[],["result",6,[["vec",3,[["string",3]]]]]],[[["item",4]]]],"p":[[3,"FilePaths"],[4,"ExportItem"],[3,"Method"],[13,"Function"],[13,"Impl"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
