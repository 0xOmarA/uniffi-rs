initSidebarItems({"fn":[["arg_type_cpp","Declares a C++ in or out argument type."],["class_name_cpp","Declares a class name in C++."],["class_name_webidl","Declares an interface, dictionary, enum, or namespace name in WebIDL."],["dummy_ret_value_cpp","Generates a dummy value for a given return type. A C++ function that declares a return type must return some value of that type, even if it throws a DOM exception via the `ErrorResult`."],["enum_variant_cpp",""],["enum_variant_webidl",""],["field_name_cpp","`Codegen.py` emits field names as `mFieldName`. The `m` prefix is Gecko style for struct members."],["fn_name_cpp","Declares a class or instance method name in C++. Function and methods names are UpperCamelCase in C++, even though theyâ€™re mixedCamelCase in WebIDL."],["fn_name_webidl","Declares a method name in WebIDL."],["header_name_cpp",""],["in_arg_type_cpp",""],["lift_cpp","Generates an expression for lifting a C return type from the FFI into a C++ out parameter."],["literal_webidl","Emits a literal default value for WebIDL."],["lower_cpp","Generates an expression for lowering a C++ type into a C type when calling an FFI function."],["ret_type_cpp","Declares a C++ return type."],["type_cpp","Declares a C++ type."],["type_ffi","Declares a C type in the `extern` declarations."],["type_webidl","Declares a WebIDL type."],["var_name_webidl",""]]});